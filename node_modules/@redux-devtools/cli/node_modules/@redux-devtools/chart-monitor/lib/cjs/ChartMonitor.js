"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var themes = _interopRequireWildcard(require("redux-devtools-themes"));

var _core = require("@redux-devtools/core");

var _deepmerge = _interopRequireDefault(require("deepmerge"));

var _reducers = _interopRequireDefault(require("./reducers"));

var _Chart = _interopRequireDefault(require("./Chart"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

// eslint-disable-next-line @typescript-eslint/unbound-method
var reset = _core.ActionCreators.reset,
    rollback = _core.ActionCreators.rollback,
    commit = _core.ActionCreators.commit,
    sweep = _core.ActionCreators.sweep,
    toggleAction = _core.ActionCreators.toggleAction;
var styles = {
  container: {
    fontFamily: 'monaco, Consolas, Lucida Console, monospace',
    position: 'relative',
    overflowY: 'hidden',
    width: '100%',
    height: '100%',
    minWidth: 300
  }
};

function invertColors(theme) {
  return _objectSpread(_objectSpread({}, theme), {}, {
    base00: theme.base07,
    base01: theme.base06,
    base02: theme.base05,
    base03: theme.base04,
    base04: theme.base03,
    base05: theme.base02,
    base06: theme.base01,
    base07: theme.base00
  });
}

var ChartMonitor = /*#__PURE__*/function (_PureComponent) {
  (0, _inherits2.default)(ChartMonitor, _PureComponent);

  var _super = _createSuper(ChartMonitor);

  function ChartMonitor() {
    var _this;

    (0, _classCallCheck2.default)(this, ChartMonitor);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleRollback", function () {
      _this.props.dispatch(rollback());
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleSweep", function () {
      _this.props.dispatch(sweep());
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleCommit", function () {
      _this.props.dispatch(commit());
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleToggleAction", function (id) {
      _this.props.dispatch(toggleAction(id));
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleReset", function () {
      _this.props.dispatch(reset());
    });
    return _this;
  }

  (0, _createClass2.default)(ChartMonitor, [{
    key: "getTheme",
    value: function getTheme() {
      var _this$props = this.props,
          theme = _this$props.theme,
          invertTheme = _this$props.invertTheme;

      if (typeof theme !== 'string') {
        return invertTheme ? invertColors(theme) : theme;
      }

      if (typeof themes[theme] !== 'undefined') {
        return invertTheme ? invertColors(themes[theme]) : themes[theme];
      }

      console.warn('DevTools theme ' + theme + ' not found, defaulting to nicinabox');
      return invertTheme ? invertColors(themes.nicinabox) : themes.nicinabox;
    }
  }, {
    key: "getChartStyle",
    value: function getChartStyle() {
      var theme = this.getTheme();
      return {
        width: '100%',
        height: '100%',
        node: {
          colors: {
            default: theme.base0B,
            collapsed: theme.base0B,
            parent: theme.base0E
          },
          radius: 7
        },
        text: {
          colors: {
            default: theme.base0D,
            hover: theme.base06
          }
        }
      };
    }
  }, {
    key: "getChartOptions",
    value: function getChartOptions() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
      var computedStates = props.computedStates;
      var theme = this.getTheme();
      var tooltipOptions = {
        disabled: false,
        offset: {
          left: 30,
          top: 10
        },
        indentationSize: 2,
        style: {
          'background-color': theme.base06,
          opacity: '0.7',
          'border-radius': '5px',
          padding: '5px'
        }
      };
      var defaultOptions = {
        state: computedStates.length ? computedStates[props.currentStateIndex].state : null,
        isSorted: false,
        heightBetweenNodesCoeff: 1,
        widthBetweenNodesCoeff: 1.3,
        tooltipOptions: tooltipOptions,
        style: this.getChartStyle()
      };
      return (0, _deepmerge.default)(defaultOptions, props);
    }
  }, {
    key: "render",
    value: function render() {
      var theme = this.getTheme();
      var ChartAsAny = _Chart.default;
      return /*#__PURE__*/_react.default.createElement("div", {
        style: _objectSpread(_objectSpread({}, styles.container), {}, {
          backgroundColor: theme.base07
        })
      }, /*#__PURE__*/_react.default.createElement(ChartAsAny, this.getChartOptions()));
    }
  }]);
  return ChartMonitor;
}(_react.PureComponent);

(0, _defineProperty2.default)(ChartMonitor, "update", _reducers.default);
(0, _defineProperty2.default)(ChartMonitor, "propTypes", {
  dispatch: _propTypes.default.func,
  computedStates: _propTypes.default.array,
  currentStateIndex: _propTypes.default.number,
  actionsById: _propTypes.default.object,
  stagedActionIds: _propTypes.default.array,
  skippedActionIds: _propTypes.default.array,
  monitorState: _propTypes.default.shape({
    initialScrollTop: _propTypes.default.number
  }),
  preserveScrollTop: _propTypes.default.bool,
  select: _propTypes.default.func.isRequired,
  theme: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string]),
  invertTheme: _propTypes.default.bool
});
(0, _defineProperty2.default)(ChartMonitor, "defaultProps", {
  select: function select(state) {
    return state;
  },
  theme: 'nicinabox',
  preserveScrollTop: true,
  invertTheme: false
});
var _default = ChartMonitor;
exports.default = _default;