import { Component } from 'react';
import PropTypes from 'prop-types';
import { LiftedAction } from '@redux-devtools/core';
import { Action } from 'redux';
import { Options, State } from '../reducers/instances';
interface Props {
    dispatch: (action: LiftedAction<unknown, Action<unknown>, unknown>) => void;
    liftedState: State;
    options: Options;
}
export default class TopButtons extends Component<Props> {
    static propTypes: {
        liftedState: PropTypes.Validator<object>;
        dispatch: PropTypes.Validator<(...args: any[]) => any>;
        options: PropTypes.Validator<object>;
    };
    shouldComponentUpdate(nextProps: Props): boolean;
    handleRollback: () => void;
    handleSweep: () => void;
    handleCommit: () => void;
    handleReset: () => void;
    render(): JSX.Element;
}
export {};
