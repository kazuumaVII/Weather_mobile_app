import React, { Component } from 'react';
import { ResolveThunks } from 'react-redux';
import { selectInstance } from '../actions';
import { StoreState } from '../reducers';
declare type StateProps = ReturnType<typeof mapStateToProps>;
declare type DispatchProps = ResolveThunks<typeof actionCreators>;
declare type Props = StateProps & DispatchProps;
declare class InstanceSelector extends Component<Props> {
    select?: {
        readonly value: string;
        readonly label: string | number;
    }[];
    render(): JSX.Element;
}
declare const mapStateToProps: (state: StoreState) => {
    selected: string | number | null;
    instances: {
        [id: string]: import("..").Options;
    };
};
declare const actionCreators: {
    onSelect: typeof selectInstance;
};
declare const _default: import("react-redux").ConnectedComponent<typeof InstanceSelector, import("react-redux").Omit<React.ClassAttributes<InstanceSelector> & {
    selected: string | number | null;
    instances: {
        [id: string]: import("..").Options;
    };
} & {
    onSelect: typeof selectInstance;
}, "selected" | "onSelect" | "instances">>;
export default _default;
