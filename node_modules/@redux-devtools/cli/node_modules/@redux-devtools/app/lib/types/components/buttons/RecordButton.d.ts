import React, { Component } from 'react';
import { StoreAction } from '../../actions';
import { Dispatch } from 'redux';
declare type DispatchProps = ReturnType<typeof mapDispatchToProps>;
interface OwnProps {
    paused: boolean | undefined;
}
declare type Props = DispatchProps & OwnProps;
declare class RecordButton extends Component<Props> {
    shouldComponentUpdate(nextProps: Props): boolean;
    render(): JSX.Element;
}
declare function mapDispatchToProps(dispatch: Dispatch<StoreAction>, ownProps: OwnProps): {
    pauseRecording: () => import("../../actions").LiftedActionDispatchAction;
};
declare const _default: import("react-redux").ConnectedComponent<typeof RecordButton, import("react-redux").Omit<React.ClassAttributes<RecordButton> & {
    pauseRecording: () => import("../../actions").LiftedActionDispatchAction;
} & OwnProps, "pauseRecording"> & OwnProps>;
export default _default;
