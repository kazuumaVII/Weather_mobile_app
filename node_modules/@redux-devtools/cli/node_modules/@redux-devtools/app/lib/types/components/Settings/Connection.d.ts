import React, { Component } from 'react';
import { ResolveThunks } from 'react-redux';
import { JSONSchema7Definition, JSONSchema7TypeName } from 'json-schema';
import { ConnectionType, saveSocketSettings } from '../../actions';
import { StoreState } from '../../reducers';
import { ConnectionStateOptions } from '../../reducers/connection';
import { IChangeEvent, ISubmitEvent } from '@rjsf/core';
declare module 'json-schema' {
    interface JSONSchema7 {
        enumNames?: JSONSchema7Type[];
    }
}
interface Schema {
    type: JSONSchema7TypeName;
    required?: string[];
    properties: {
        [key: string]: JSONSchema7Definition;
    };
}
declare type StateProps = ReturnType<typeof mapStateToProps>;
declare type DispatchProps = ResolveThunks<typeof actionCreators>;
declare type Props = StateProps & DispatchProps;
interface FormData extends ConnectionStateOptions {
    readonly type: ConnectionType;
}
interface State {
    readonly formData: FormData;
    readonly type: ConnectionType;
    readonly schema: Schema;
    readonly changed: boolean | undefined;
}
export declare class Connection extends Component<Props, State> {
    setFormData: (type: ConnectionType, changed?: boolean | undefined) => {
        formData: {
            hostname: string;
            port: number;
            secure: boolean;
            type: ConnectionType;
        };
        type: ConnectionType;
        schema: Schema;
        changed: boolean | undefined;
    };
    state: State;
    shouldComponentUpdate(nextProps: Props, nextState: State): boolean;
    UNSAFE_componentWillReceiveProps(nextProps: Props): void;
    handleSave: (data: ISubmitEvent<FormData>) => void;
    handleChange: (data: IChangeEvent<FormData>) => void;
    render(): JSX.Element;
}
declare const mapStateToProps: (state: StoreState) => import("../../reducers/connection").ConnectionState;
declare const actionCreators: {
    saveSettings: typeof saveSocketSettings;
};
declare const _default: import("react-redux").ConnectedComponent<typeof Connection, import("react-redux").Omit<React.ClassAttributes<Connection> & import("../../reducers/connection").ConnectionState & {
    saveSettings: typeof saveSocketSettings;
}, "type" | "options" | "saveSettings">>;
export default _default;
