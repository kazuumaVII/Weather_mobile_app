import React, { Component } from 'react';
import { StoreAction } from '../../actions';
import { Dispatch } from 'redux';
declare type DispatchProps = ReturnType<typeof mapDispatchToProps>;
interface OwnProps {
    locked: boolean | undefined;
    disabled: boolean;
}
declare type Props = DispatchProps & OwnProps;
declare class LockButton extends Component<Props> {
    shouldComponentUpdate(nextProps: Props): boolean;
    render(): JSX.Element;
}
declare function mapDispatchToProps(dispatch: Dispatch<StoreAction>, ownProps: OwnProps): {
    lockChanges: () => import("../../actions").LiftedActionDispatchAction;
};
declare const _default: import("react-redux").ConnectedComponent<typeof LockButton, import("react-redux").Omit<React.ClassAttributes<LockButton> & {
    lockChanges: () => import("../../actions").LiftedActionDispatchAction;
} & OwnProps, "lockChanges"> & OwnProps>;
export default _default;
