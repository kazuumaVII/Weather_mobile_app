import React, { Component } from 'react';
import { ResolveThunks } from 'react-redux';
import { selectMonitor } from '../actions';
import { StoreState } from '../reducers';
declare type StateProps = ReturnType<typeof mapStateToProps>;
declare type DispatchProps = ResolveThunks<typeof actionCreators>;
declare type Props = StateProps & DispatchProps;
declare class MonitorSelector extends Component<Props> {
    shouldComponentUpdate(nextProps: Props): boolean;
    render(): JSX.Element;
}
declare const mapStateToProps: (state: StoreState) => {
    selected: string;
};
declare const actionCreators: {
    selectMonitor: typeof selectMonitor;
};
declare const _default: import("react-redux").ConnectedComponent<typeof MonitorSelector, import("react-redux").Omit<React.ClassAttributes<MonitorSelector> & {
    selected: string;
} & {
    selectMonitor: typeof selectMonitor;
}, "selected" | "selectMonitor">>;
export default _default;
