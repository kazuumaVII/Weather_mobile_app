import _extends from "@babel/runtime/helpers/extends";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

var _templateObject;

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { Component } from 'react';
import styled, { withTheme } from 'styled-components';
import { SliderMonitor } from '@redux-devtools/slider-monitor';
var SliderWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  border-color: ", ";\n  border-style: solid;\n  border-width: 1px 0;\n"])), function (props) {
  return props.theme.base02;
});

var Slider = /*#__PURE__*/function (_Component) {
  _inherits(Slider, _Component);

  var _super = _createSuper(Slider);

  function Slider() {
    _classCallCheck(this, Slider);

    return _super.apply(this, arguments);
  }

  _createClass(Slider, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      return nextProps.liftedState !== this.props.liftedState || nextProps.theme.scheme !== this.props.theme.scheme;
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/React.createElement(SliderWrapper, {
        className: "slider"
      }, /*#__PURE__*/React.createElement(SliderMonitor, _extends({}, this.props.liftedState, {
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-ignore
        dispatch: this.props.dispatch,
        theme: this.props.theme,
        hideResetButton: true
      })));
    }
  }]);

  return Slider;
}(Component);

export default withTheme(Slider);