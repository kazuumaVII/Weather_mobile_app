import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { Component } from 'react';
import { connect } from 'react-redux';
import { Container, Form } from '@redux-devtools/ui';
import { saveSocketSettings } from '../../actions';
var defaultSchema = {
  type: 'object',
  required: [],
  properties: {
    type: {
      title: 'Connection settings (for getting reports and remote debugging)',
      type: 'string',
      enum: ['disabled', 'custom'],
      enumNames: ['no remote connection', 'use local (custom) server']
    },
    hostname: {
      type: 'string'
    },
    port: {
      type: 'number'
    },
    secure: {
      type: 'boolean'
    }
  }
};
var uiSchema = {
  type: {
    'ui:widget': 'radio'
  }
};
export var Connection = /*#__PURE__*/function (_Component) {
  _inherits(Connection, _Component);

  var _super = _createSuper(Connection);

  function Connection() {
    var _this;

    _classCallCheck(this, Connection);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "setFormData", function (type, changed) {
      var schema;

      if (type !== 'custom') {
        schema = {
          type: 'object',
          properties: {
            type: defaultSchema.properties.type
          }
        };
      } else {
        schema = defaultSchema;
      }

      return {
        formData: _objectSpread({
          type: type
        }, _this.props.options),
        type: type,
        schema: schema,
        changed: changed
      };
    });

    _defineProperty(_assertThisInitialized(_this), "state", _this.setFormData(_this.props.type));

    _defineProperty(_assertThisInitialized(_this), "handleSave", function (data) {
      _this.props.saveSettings(data.formData);

      _this.setState({
        changed: false
      });
    });

    _defineProperty(_assertThisInitialized(_this), "handleChange", function (data) {
      var formData = data.formData;
      var type = formData.type;

      if (type !== _this.state.type) {
        _this.setState(_this.setFormData(type, true));
      } else if (!_this.state.changed) {
        _this.setState({
          changed: true,
          formData: formData
        });
      }
    });

    return _this;
  }

  _createClass(Connection, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      return this.state !== nextState;
    }
  }, {
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(nextProps) {
      if (this.props.options !== nextProps.options) {
        this.setState({
          formData: _objectSpread(_objectSpread({}, nextProps.options), {}, {
            type: nextProps.type
          })
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var type = this.state.type || 'disabled';
      var changed = this.state.changed;
      var disabled = type === 'disabled';
      return /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Form, {
        primaryButton: changed,
        noSubmit: disabled && !changed,
        submitText: disabled ? 'Disconnect' : 'Connect',
        formData: this.state.formData,
        schema: this.state.schema,
        uiSchema: uiSchema,
        onChange: this.handleChange,
        onSubmit: this.handleSave
      }));
    }
  }]);

  return Connection;
}(Component);

var mapStateToProps = function mapStateToProps(state) {
  return state.connection;
};

var actionCreators = {
  saveSettings: saveSocketSettings
};
export default connect(mapStateToProps, actionCreators)(Connection);