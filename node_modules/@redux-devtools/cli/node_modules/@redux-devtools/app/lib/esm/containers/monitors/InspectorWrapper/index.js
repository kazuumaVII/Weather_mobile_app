import _extends from "@babel/runtime/helpers/extends";
import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
var _excluded = ["features"];

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { Component } from 'react';
import { InspectorMonitor } from '@redux-devtools/inspector-monitor';
import { TraceTab } from '@redux-devtools/inspector-monitor-trace-tab';
import { TestTab } from '@redux-devtools/inspector-monitor-test-tab';
import { DATA_TYPE_KEY } from '../../../constants/dataTypes';
import SubTabs from './SubTabs';
var DEFAULT_TABS = [{
  name: 'Action',
  component: SubTabs
}, {
  name: 'State',
  component: SubTabs
}, {
  name: 'Diff',
  component: SubTabs
}, {
  name: 'Trace',
  component: TraceTab
}];

var InspectorWrapper = /*#__PURE__*/function (_Component) {
  _inherits(InspectorWrapper, _Component);

  var _super = _createSuper(InspectorWrapper);

  function InspectorWrapper() {
    _classCallCheck(this, InspectorWrapper);

    return _super.apply(this, arguments);
  }

  _createClass(InspectorWrapper, [{
    key: "render",
    value: // eslint-disable-next-line @typescript-eslint/unbound-method
    function render() {
      var _this$props = this.props,
          features = _this$props.features,
          rest = _objectWithoutProperties(_this$props, _excluded);

      var tabs;

      if (features && features.test) {
        tabs = function tabs() {
          return [].concat(_toConsumableArray(DEFAULT_TABS), [{
            name: 'Test',
            component: TestTab
          }]);
        };
      } else {
        tabs = function tabs() {
          return DEFAULT_TABS;
        };
      }

      return /*#__PURE__*/React.createElement(InspectorMonitor, _extends({
        dataTypeKey: DATA_TYPE_KEY,
        invertTheme: false,
        tabs: tabs,
        hideActionButtons: !features.skip,
        hideMainButtons: true
      }, rest));
    }
  }]);

  return InspectorWrapper;
}(Component);

_defineProperty(InspectorWrapper, "update", InspectorMonitor.update);

export default InspectorWrapper;