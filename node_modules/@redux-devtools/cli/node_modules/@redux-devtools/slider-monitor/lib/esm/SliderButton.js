import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { Component, PureComponent } from 'react';
import PropTypes from 'prop-types';
import { Button } from '@redux-devtools/ui';

var SliderButton = /*#__PURE__*/function (_ref) {
  _inherits(SliderButton, _ref);

  var _super = _createSuper(SliderButton);

  function SliderButton() {
    var _this;

    _classCallCheck(this, SliderButton);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "renderPauseButton", function () {
      return /*#__PURE__*/React.createElement(Button, {
        onClick: _this.props.onClick,
        title: "Pause",
        size: "small",
        disabled: _this.props.disabled,
        theme: _this.props.theme
      }, /*#__PURE__*/React.createElement("svg", {
        viewBox: "0 0 24 24",
        preserveAspectRatio: "xMidYMid meet",
        style: _this.iconStyle()
      }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
        d: "M6 19h4V5H6v14zm8-14v14h4V5h-4z"
      }))));
    });

    _defineProperty(_assertThisInitialized(_this), "renderStepButton", function (direction) {
      var isLeft = direction === 'left';
      var d = isLeft ? 'M15.41 16.09l-4.58-4.59 4.58-4.59-1.41-1.41-6 6 6 6z' : 'M8.59 16.34l4.58-4.59-4.58-4.59 1.41-1.41 6 6-6 6z';
      return /*#__PURE__*/React.createElement(Button, {
        size: "small",
        title: isLeft ? 'Go back' : 'Go forward',
        onClick: _this.props.onClick,
        disabled: _this.props.disabled,
        theme: _this.props.theme
      }, /*#__PURE__*/React.createElement("svg", {
        viewBox: "0 0 24 24",
        preserveAspectRatio: "xMidYMid meet",
        style: _this.iconStyle()
      }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
        d: d
      }))));
    });

    return _this;
  }

  _createClass(SliderButton, [{
    key: "iconStyle",
    value: function iconStyle() {
      return {
        cursor: 'hand',
        fill: this.props.theme.base06,
        width: '1.8rem',
        height: '1.8rem'
      };
    }
  }, {
    key: "renderPlayButton",
    value: function renderPlayButton() {
      return /*#__PURE__*/React.createElement(Button, {
        onClick: this.props.onClick,
        title: "Play",
        size: "small",
        disabled: this.props.disabled,
        theme: this.props.theme
      }, /*#__PURE__*/React.createElement("svg", {
        viewBox: "0 0 24 24",
        preserveAspectRatio: "xMidYMid meet",
        style: this.iconStyle()
      }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
        d: "M8 5v14l11-7z"
      }))));
    }
  }, {
    key: "render",
    value: function render() {
      switch (this.props.type) {
        case 'play':
          return this.renderPlayButton();

        case 'pause':
          return this.renderPauseButton();

        case 'stepLeft':
          return this.renderStepButton('left');

        case 'stepRight':
          return this.renderStepButton('right');

        default:
          return null;
      }
    }
  }]);

  return SliderButton;
}(PureComponent || Component);

_defineProperty(SliderButton, "propTypes", {
  theme: PropTypes.object,
  type: PropTypes.string,
  disabled: PropTypes.bool,
  onClick: PropTypes.func
});

export { SliderButton as default };