import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
var _excluded = ["type"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { Component } from 'react';
import { JSONTree } from 'react-json-tree';
var styles = {
  actionBar: {
    paddingTop: 8,
    paddingBottom: 7,
    paddingLeft: 16
  },
  payload: {
    margin: 0,
    paddingLeft: 16,
    overflow: 'auto'
  }
};

var LogMonitorAction = /*#__PURE__*/function (_Component) {
  _inherits(LogMonitorAction, _Component);

  var _super = _createSuper(LogMonitorAction);

  function LogMonitorAction() {
    var _this;

    _classCallCheck(this, LogMonitorAction);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "shouldExpandNode", function (keyPath, data, level) {
      return _this.props.expandActionRoot && level === 0;
    });

    return _this;
  }

  _createClass(LogMonitorAction, [{
    key: "renderPayload",
    value: function renderPayload(payload) {
      return /*#__PURE__*/React.createElement("div", {
        style: _objectSpread(_objectSpread({}, styles.payload), {}, {
          backgroundColor: this.props.theme.base00
        })
      }, Object.keys(payload).length > 0 ? /*#__PURE__*/React.createElement(JSONTree, {
        theme: this.props.theme,
        invertTheme: false,
        keyPath: ['action'],
        data: payload,
        shouldExpandNode: this.shouldExpandNode
      }) : '');
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props$action = this.props.action,
          type = _this$props$action.type,
          payload = _objectWithoutProperties(_this$props$action, _excluded);

      return /*#__PURE__*/React.createElement("div", {
        style: _objectSpread({
          backgroundColor: this.props.theme.base02,
          color: this.props.theme.base06
        }, this.props.style)
      }, /*#__PURE__*/React.createElement("div", {
        style: styles.actionBar,
        onClick: this.props.onClick
      }, type !== null && type.toString()), !this.props.collapsed ? this.renderPayload(payload) : '');
    }
  }]);

  return LogMonitorAction;
}(Component);

export { LogMonitorAction as default };