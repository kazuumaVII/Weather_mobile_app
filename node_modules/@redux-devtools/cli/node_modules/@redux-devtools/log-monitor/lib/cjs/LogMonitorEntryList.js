"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _LogMonitorEntry = _interopRequireDefault(require("./LogMonitorEntry"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var LogMonitorEntryList = /*#__PURE__*/function (_PureComponent) {
  (0, _inherits2.default)(LogMonitorEntryList, _PureComponent);

  var _super = _createSuper(LogMonitorEntryList);

  function LogMonitorEntryList() {
    (0, _classCallCheck2.default)(this, LogMonitorEntryList);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(LogMonitorEntryList, [{
    key: "render",
    value: function render() {
      var elements = [];
      var _this$props = this.props,
          theme = _this$props.theme,
          actionsById = _this$props.actionsById,
          computedStates = _this$props.computedStates,
          currentStateIndex = _this$props.currentStateIndex,
          consecutiveToggleStartId = _this$props.consecutiveToggleStartId,
          select = _this$props.select,
          skippedActionIds = _this$props.skippedActionIds,
          stagedActionIds = _this$props.stagedActionIds,
          expandActionRoot = _this$props.expandActionRoot,
          expandStateRoot = _this$props.expandStateRoot,
          markStateDiff = _this$props.markStateDiff,
          onActionClick = _this$props.onActionClick,
          onActionShiftClick = _this$props.onActionShiftClick;

      for (var i = 0; i < stagedActionIds.length; i++) {
        var _actionId = stagedActionIds[i];
        var action = actionsById[_actionId].action;
        var _computedStates$i = computedStates[i],
            _state = _computedStates$i.state,
            error = _computedStates$i.error;
        var previousState = void 0;

        if (i > 0) {
          previousState = computedStates[i - 1].state;
        }

        elements.push( /*#__PURE__*/_react.default.createElement(_LogMonitorEntry.default, {
          key: _actionId,
          theme: theme,
          select: select,
          action: action,
          actionId: _actionId,
          state: _state,
          previousState: previousState,
          collapsed: skippedActionIds.indexOf(_actionId) > -1,
          inFuture: i > currentStateIndex,
          selected: consecutiveToggleStartId === i,
          error: error,
          expandActionRoot: expandActionRoot,
          expandStateRoot: expandStateRoot,
          markStateDiff: markStateDiff,
          onActionClick: onActionClick,
          onActionShiftClick: onActionShiftClick
        }));
      }

      return /*#__PURE__*/_react.default.createElement("div", null, elements);
    }
  }]);
  return LogMonitorEntryList;
}(_react.PureComponent);

exports.default = LogMonitorEntryList;
(0, _defineProperty2.default)(LogMonitorEntryList, "propTypes", {
  actionsById: _propTypes.default.object,
  computedStates: _propTypes.default.array,
  stagedActionIds: _propTypes.default.array,
  skippedActionIds: _propTypes.default.array,
  currentStateIndex: _propTypes.default.number,
  consecutiveToggleStartId: _propTypes.default.number,
  select: _propTypes.default.func.isRequired,
  onActionClick: _propTypes.default.func.isRequired,
  theme: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string]),
  expandActionRoot: _propTypes.default.bool,
  expandStateRoot: _propTypes.default.bool
});