"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _core = require("@redux-devtools/core");

var _LogMonitorButton = _interopRequireDefault(require("./LogMonitorButton"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

// eslint-disable-next-line @typescript-eslint/unbound-method
var reset = _core.ActionCreators.reset,
    rollback = _core.ActionCreators.rollback,
    commit = _core.ActionCreators.commit,
    sweep = _core.ActionCreators.sweep;
var style = {
  textAlign: 'center',
  borderBottomWidth: 1,
  borderBottomStyle: 'solid',
  borderColor: 'transparent',
  zIndex: 1,
  display: 'flex',
  flexDirection: 'row'
};

var LogMonitorButtonBar = /*#__PURE__*/function (_PureComponent) {
  (0, _inherits2.default)(LogMonitorButtonBar, _PureComponent);

  var _super = _createSuper(LogMonitorButtonBar);

  function LogMonitorButtonBar() {
    var _this;

    (0, _classCallCheck2.default)(this, LogMonitorButtonBar);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleRollback", function () {
      _this.props.dispatch(rollback());
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleSweep", function () {
      _this.props.dispatch(sweep());
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleCommit", function () {
      _this.props.dispatch(commit());
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleReset", function () {
      _this.props.dispatch(reset());
    });
    return _this;
  }

  (0, _createClass2.default)(LogMonitorButtonBar, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          theme = _this$props.theme,
          hasStates = _this$props.hasStates,
          hasSkippedActions = _this$props.hasSkippedActions;
      return /*#__PURE__*/_react.default.createElement("div", {
        style: _objectSpread(_objectSpread({}, style), {}, {
          borderColor: theme.base02
        })
      }, /*#__PURE__*/_react.default.createElement(_LogMonitorButton.default, {
        theme: theme,
        onClick: this.handleReset,
        enabled: true
      }, "Reset"), /*#__PURE__*/_react.default.createElement(_LogMonitorButton.default, {
        theme: theme,
        onClick: this.handleRollback,
        enabled: hasStates
      }, "Revert"), /*#__PURE__*/_react.default.createElement(_LogMonitorButton.default, {
        theme: theme,
        onClick: this.handleSweep,
        enabled: hasSkippedActions
      }, "Sweep"), /*#__PURE__*/_react.default.createElement(_LogMonitorButton.default, {
        theme: theme,
        onClick: this.handleCommit,
        enabled: hasStates
      }, "Commit"));
    }
  }]);
  return LogMonitorButtonBar;
}(_react.PureComponent);

exports.default = LogMonitorButtonBar;
(0, _defineProperty2.default)(LogMonitorButtonBar, "propTypes", {
  dispatch: _propTypes.default.func,
  theme: _propTypes.default.object
});