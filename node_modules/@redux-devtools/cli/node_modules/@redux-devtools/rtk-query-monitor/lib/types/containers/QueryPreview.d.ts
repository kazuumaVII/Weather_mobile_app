import React, { ReactNode } from 'react';
import { createTreeItemLabelRenderer } from '../styles/tree';
import { QueryPreviewTabs, RtkResourceInfo, SelectorsSource, TabOption } from '../types';
import { InspectorSelectors } from '../selectors';
import { StylingFunction } from 'react-base16-styling';
export interface QueryPreviewProps<S = unknown> {
    readonly selectedTab: QueryPreviewTabs;
    readonly hasNoApis: boolean;
    readonly onTabChange: (tab: QueryPreviewTabs) => void;
    readonly resInfo: RtkResourceInfo | null;
    readonly styling: StylingFunction;
    readonly isWideLayout: boolean;
    readonly selectorsSource: SelectorsSource<S>;
    readonly selectors: InspectorSelectors<S>;
}
export declare class QueryPreview<S> extends React.PureComponent<QueryPreviewProps<S>> {
    readonly labelRenderer: ReturnType<typeof createTreeItemLabelRenderer>;
    constructor(props: QueryPreviewProps<S>);
    renderLabelWithCounter: (label: React.ReactText, counter: number) => string;
    renderTabLabel: (tab: TabOption<QueryPreviewTabs, unknown, 'query' | 'mutation'>) => ReactNode;
    render(): ReactNode;
}
