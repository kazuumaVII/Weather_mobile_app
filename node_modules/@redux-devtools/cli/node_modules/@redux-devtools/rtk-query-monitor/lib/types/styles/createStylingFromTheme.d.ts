import { StylingConfig } from 'react-base16-styling';
import * as reduxThemes from 'redux-devtools-themes';
import { Action } from 'redux';
import { RtkQueryMonitorProps, StyleUtils } from '../types';
export declare const colorMap: (theme: reduxThemes.Base16Theme) => {
    readonly TEXT_COLOR: string;
    readonly TEXT_PLACEHOLDER_COLOR: string;
    readonly BACKGROUND_COLOR: string;
    readonly SELECTED_BACKGROUND_COLOR: string;
    readonly SKIPPED_BACKGROUND_COLOR: string;
    readonly HEADER_BACKGROUND_COLOR: string;
    readonly HEADER_BORDER_COLOR: string;
    readonly BORDER_COLOR: string;
    readonly LIST_BORDER_COLOR: string;
    readonly ACTION_TIME_BACK_COLOR: string;
    readonly ACTION_TIME_COLOR: string;
    readonly PIN_COLOR: string;
    readonly ITEM_HINT_COLOR: string;
    readonly TAB_BACK_SELECTED_COLOR: string;
    readonly TAB_BACK_COLOR: string;
    readonly TAB_BACK_HOVER_COLOR: string;
    readonly TAB_BORDER_COLOR: string;
    readonly DIFF_ADD_COLOR: string;
    readonly DIFF_REMOVE_COLOR: string;
    readonly DIFF_ARROW_COLOR: string;
    readonly LINK_COLOR: string;
    readonly LINK_HOVER_COLOR: string;
    readonly ERROR_COLOR: string;
    readonly ULIST_DISC_COLOR: string;
    readonly ULIST_COLOR: string;
    readonly ULIST_STRONG_COLOR: string;
    readonly TAB_CONTENT_COLOR: string;
    readonly TOGGLE_BUTTON_BACKGROUND: string;
    readonly TOGGLE_BUTTON_SELECTED_BACKGROUND: string;
    readonly TOGGLE_BUTTON_ERROR: string;
};
export declare const createStylingFromTheme: import("lodash").CurriedFunction1<import("react-base16-styling").Theme | undefined, import("react-base16-styling").StylingFunction>;
export declare function createThemeState<S, A extends Action<unknown>>(props: RtkQueryMonitorProps<S, A>): StyleUtils;
export declare const StyleUtilsContext: import("react").Context<StyleUtils>;
export declare function getJsonTreeTheme(base16Theme: reduxThemes.Base16Theme): StylingConfig;
