"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.QueryPreviewActions = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _toolkit = require("@reduxjs/toolkit");

var _react = _interopRequireWildcard(require("react"));

var _object = require("../utils/object");

var _TreeView = require("./TreeView");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var keySep = ' - ';

var QueryPreviewActions = /*#__PURE__*/function (_PureComponent) {
  (0, _inherits2.default)(QueryPreviewActions, _PureComponent);

  var _super = _createSuper(QueryPreviewActions);

  function QueryPreviewActions() {
    var _this;

    (0, _classCallCheck2.default)(this, QueryPreviewActions);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "selectFormattedActions", (0, _toolkit.createSelector)(_object.identity, function (actions) {
      var output = {};

      if (actions.length === 0) {
        return _object.emptyRecord;
      }

      for (var i = 0, len = actions.length; i < len; i++) {
        var _type;

        var action = actions[i];
        var key = "".concat(i).concat(keySep).concat((_type = action === null || action === void 0 ? void 0 : action.type) !== null && _type !== void 0 ? _type : '');
        output[key] = action;
      }

      return output;
    }));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "isLastActionNode", function (keyPath, layer) {
      if (layer >= 1) {
        var len = _this.props.actionsOfQuery.length;
        var actionKey = keyPath[keyPath.length - 1];

        if (typeof actionKey === 'string') {
          var index = Number(actionKey.split(keySep)[0]);
          return len > 0 && len - index < 2;
        }
      }

      return false;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "shouldExpandNode", function (keyPath, value, layer) {
      if (layer === 1) {
        return _this.isLastActionNode(keyPath, layer);
      }

      if (layer === 2) {
        return _this.isLastActionNode(keyPath, layer) && (keyPath[0] === 'meta' || keyPath[0] === 'error');
      }

      return layer <= 1;
    });
    return _this;
  }

  (0, _createClass2.default)(QueryPreviewActions, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          isWideLayout = _this$props.isWideLayout,
          actionsOfQuery = _this$props.actionsOfQuery;
      return /*#__PURE__*/_react.default.createElement(_TreeView.TreeView, {
        data: this.selectFormattedActions(actionsOfQuery),
        isWideLayout: isWideLayout,
        shouldExpandNode: this.shouldExpandNode
      });
    }
  }]);
  return QueryPreviewActions;
}(_react.PureComponent);

exports.QueryPreviewActions = QueryPreviewActions;