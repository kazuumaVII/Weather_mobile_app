"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.QueryPreview = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _createStylingFromTheme = require("../styles/createStylingFromTheme");

var _tree = require("../styles/tree");

var _types = require("../types");

var _QueryPreviewHeader = require("../components/QueryPreviewHeader");

var _QueryPreviewInfo = require("../components/QueryPreviewInfo");

var _QueryPreviewApi = require("../components/QueryPreviewApi");

var _QueryPreviewSubscriptions = require("../components/QueryPreviewSubscriptions");

var _QueryPreviewTags = require("../components/QueryPreviewTags");

var _NoRtkQueryApi = require("../components/NoRtkQueryApi");

var _mapProps = require("./mapProps");

var _QueryPreviewActions = require("../components/QueryPreviewActions");

var _tabs = require("../utils/tabs");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var MappedQueryPreviewTags = (0, _mapProps.mapProps)(function (_ref) {
  var selectors = _ref.selectors,
      selectorsSource = _ref.selectorsSource,
      isWideLayout = _ref.isWideLayout,
      resInfo = _ref.resInfo;
  return {
    resInfo: resInfo,
    tags: selectors.selectCurrentQueryTags(selectorsSource),
    isWideLayout: isWideLayout
  };
})(_QueryPreviewTags.QueryPreviewTags);
var MappedQueryPreviewInfo = (0, _mapProps.mapProps)(function (_ref2) {
  var resInfo = _ref2.resInfo,
      isWideLayout = _ref2.isWideLayout;
  return {
    resInfo: resInfo,
    isWideLayout: isWideLayout
  };
})(_QueryPreviewInfo.QueryPreviewInfo);
var MappedQuerySubscriptipns = (0, _mapProps.mapProps)(function (_ref3) {
  var selectors = _ref3.selectors,
      selectorsSource = _ref3.selectorsSource,
      isWideLayout = _ref3.isWideLayout;
  return {
    isWideLayout: isWideLayout,
    subscriptions: selectors.selectSubscriptionsOfCurrentQuery(selectorsSource)
  };
})(_QueryPreviewSubscriptions.QueryPreviewSubscriptions);
var MappedApiPreview = (0, _mapProps.mapProps)(function (_ref4) {
  var isWideLayout = _ref4.isWideLayout,
      selectors = _ref4.selectors,
      selectorsSource = _ref4.selectorsSource;
  return {
    isWideLayout: isWideLayout,
    apiState: selectors.selectApiOfCurrentQuery(selectorsSource),
    apiStats: selectors.selectApiStatsOfCurrentQuery(selectorsSource)
  };
})(_QueryPreviewApi.QueryPreviewApi);
var MappedQueryPreviewActions = (0, _mapProps.mapProps)(function (_ref5) {
  var isWideLayout = _ref5.isWideLayout,
      selectorsSource = _ref5.selectorsSource,
      selectors = _ref5.selectors;
  return {
    isWideLayout: isWideLayout,
    actionsOfQuery: selectors.selectActionsOfCurrentQuery(selectorsSource)
  };
})(_QueryPreviewActions.QueryPreviewActions);
var tabs = [{
  label: 'Query',
  value: _types.QueryPreviewTabs.queryinfo,
  component: MappedQueryPreviewInfo,
  visible: {
    query: true,
    mutation: true,
    default: true
  }
}, {
  label: 'Actions',
  value: _types.QueryPreviewTabs.actions,
  component: MappedQueryPreviewActions,
  visible: {
    query: true,
    mutation: true,
    default: true
  }
}, {
  label: 'Tags',
  value: _types.QueryPreviewTabs.queryTags,
  component: MappedQueryPreviewTags,
  visible: {
    query: true,
    mutation: false,
    default: true
  }
}, {
  label: 'Subs',
  value: _types.QueryPreviewTabs.querySubscriptions,
  component: MappedQuerySubscriptipns,
  visible: {
    query: true,
    mutation: false,
    default: true
  }
}, {
  label: 'Api',
  value: _types.QueryPreviewTabs.apiConfig,
  component: MappedApiPreview
}];

var QueryPreview = /*#__PURE__*/function (_React$PureComponent) {
  (0, _inherits2.default)(QueryPreview, _React$PureComponent);

  var _super = _createSuper(QueryPreview);

  function QueryPreview(props) {
    var _this;

    (0, _classCallCheck2.default)(this, QueryPreview);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderLabelWithCounter", function (label, counter) {
      var counterAsString = counter.toFixed(0);

      if (counterAsString.length > 3) {
        counterAsString = counterAsString.slice(0, 2) + '...';
      }

      return "".concat(label, "(").concat(counterAsString, ")");
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderTabLabel", function (tab) {
      var _this$props = _this.props,
          selectors = _this$props.selectors,
          selectorsSource = _this$props.selectorsSource,
          resInfo = _this$props.resInfo;
      var tabCount = selectors.selectTabCounters(selectorsSource)[tab.value];
      var tabLabel = tab.label;

      if (tabLabel === 'query' && (resInfo === null || resInfo === void 0 ? void 0 : resInfo.type) === 'mutation') {
        tabLabel = resInfo.type;
      }

      if (tabCount > 0) {
        return _this.renderLabelWithCounter(tabLabel, tabCount);
      }

      return tabLabel;
    });
    _this.labelRenderer = (0, _tree.createTreeItemLabelRenderer)(_this.props.styling);
    return _this;
  }

  (0, _createClass2.default)(QueryPreview, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props2 = this.props,
          resInfo = _this$props2.resInfo,
          selectedTab = _this$props2.selectedTab,
          onTabChange = _this$props2.onTabChange,
          hasNoApis = _this$props2.hasNoApis;

      var _ref6 = tabs.find(function (tab) {
        return tab.value === selectedTab;
      }) || tabs[0],
          TabComponent = _ref6.component;

      if (!resInfo) {
        return /*#__PURE__*/_react.default.createElement(_createStylingFromTheme.StyleUtilsContext.Consumer, null, function (_ref7) {
          var styling = _ref7.styling;
          return /*#__PURE__*/_react.default.createElement("div", styling('queryPreview'), /*#__PURE__*/_react.default.createElement(_QueryPreviewHeader.QueryPreviewHeader, {
            selectedTab: selectedTab,
            onTabChange: onTabChange,
            tabs: tabs.filter(function (tab) {
              return (0, _tabs.isTabVisible)(tab, 'default');
            }),
            renderTabLabel: _this2.renderTabLabel
          }), hasNoApis && /*#__PURE__*/_react.default.createElement(_NoRtkQueryApi.NoRtkQueryApi, null));
        });
      }

      return /*#__PURE__*/_react.default.createElement(_createStylingFromTheme.StyleUtilsContext.Consumer, null, function (_ref8) {
        var styling = _ref8.styling;
        return /*#__PURE__*/_react.default.createElement("div", styling('queryPreview'), /*#__PURE__*/_react.default.createElement(_QueryPreviewHeader.QueryPreviewHeader, {
          selectedTab: selectedTab,
          onTabChange: onTabChange,
          tabs: tabs.filter(function (tab) {
            return (0, _tabs.isTabVisible)(tab, resInfo.type);
          }),
          renderTabLabel: _this2.renderTabLabel
        }), /*#__PURE__*/_react.default.createElement(TabComponent, _this2.props));
      });
    }
  }]);
  return QueryPreview;
}(_react.default.PureComponent);

exports.QueryPreview = QueryPreview;