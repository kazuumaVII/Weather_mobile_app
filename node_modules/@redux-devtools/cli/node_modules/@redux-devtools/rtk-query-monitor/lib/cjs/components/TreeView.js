"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TreeView = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _toolkit = require("@reduxjs/toolkit");

var _react = _interopRequireDefault(require("react"));

var _reactJsonTree = require("react-json-tree");

var _monitorConfig = require("../monitor-config");

var _createStylingFromTheme = require("../styles/createStylingFromTheme");

var _tree = require("../styles/tree");

var _object = require("../utils/object");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var TreeView = /*#__PURE__*/function (_React$PureComponent) {
  (0, _inherits2.default)(TreeView, _React$PureComponent);

  var _super = _createSuper(TreeView);

  function TreeView(props) {
    var _this;

    (0, _classCallCheck2.default)(this, TreeView);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "selectLabelRenderer", (0, _toolkit.createSelector)(_object.identity, _tree.createTreeItemLabelRenderer));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "selectGetItemString", (0, _toolkit.createSelector)(_object.identity, function (styling) {
      return function (type, data) {
        return (0, _tree.getItemString)(styling, type, data, _monitorConfig.DATA_TYPE_KEY, false);
      };
    }));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "selectTheme", (0, _toolkit.createSelector)(_object.identity, _createStylingFromTheme.getJsonTreeTheme));
    return _this;
  }

  (0, _createClass2.default)(TreeView, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          data = _this$props.data,
          before = _this$props.before,
          after = _this$props.after,
          children = _this$props.children,
          keyPath = _this$props.keyPath,
          shouldExpandNode = _this$props.shouldExpandNode,
          hideRoot = _this$props.hideRoot;
      return /*#__PURE__*/_react.default.createElement(_createStylingFromTheme.StyleUtilsContext.Consumer, null, function (_ref) {
        var styling = _ref.styling,
            invertTheme = _ref.invertTheme,
            base16Theme = _ref.base16Theme;
        return /*#__PURE__*/_react.default.createElement("div", styling('treeWrapper'), before, /*#__PURE__*/_react.default.createElement(_reactJsonTree.JSONTree, {
          keyPath: keyPath,
          shouldExpandNode: shouldExpandNode,
          data: data,
          labelRenderer: _this2.selectLabelRenderer(styling),
          theme: _this2.selectTheme(base16Theme),
          invertTheme: invertTheme,
          getItemString: _this2.selectGetItemString(styling),
          hideRoot: hideRoot
        }), after, children);
      });
    }
  }]);
  return TreeView;
}(_react.default.PureComponent);

exports.TreeView = TreeView;
(0, _defineProperty2.default)(TreeView, "defaultProps", {
  hideRoot: true,
  shouldExpandNode: function shouldExpandNode(keyPath, value, layer) {
    return layer < 2;
  }
});