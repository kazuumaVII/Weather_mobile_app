"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.QueryForm = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _createStylingFromTheme = require("../styles/createStylingFromTheme");

var _ui = require("@redux-devtools/ui");

var _lodash = _interopRequireDefault(require("lodash.debounce"));

var _comparators = require("../utils/comparators");

var _filters = require("../utils/filters");

var _SortOrderButton = require("./SortOrderButton");

var _RegexIcon = require("./RegexIcon");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var selectId = 'rtk-query-comp-select';
var searchId = 'rtk-query-search-query';
var filterSelectId = 'rtk-query-search-query-select';
var searchPlaceholder = 'filter query by...';
var labels = {
  regexToggle: {
    info: 'Use regular expression search',
    error: 'Invalid regular expression provided'
  }
};

var QueryForm = /*#__PURE__*/function (_React$PureComponent) {
  (0, _inherits2.default)(QueryForm, _React$PureComponent);

  var _super = _createSuper(QueryForm);

  function QueryForm(props) {
    var _this;

    (0, _classCallCheck2.default)(this, QueryForm);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "inputSearchRef", /*#__PURE__*/_react.default.createRef());
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleSubmit", function (evt) {
      evt.preventDefault();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleButtonGroupClick", function (isAsc) {
      _this.props.onFormValuesChange({
        isAscendingQueryComparatorOrder: isAsc
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleSelectComparatorChange", function (option) {
      if (typeof (option === null || option === void 0 ? void 0 : option.value) === 'string') {
        _this.props.onFormValuesChange({
          queryComparator: option.value
        });
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleSelectFilterChange", function (option) {
      if (typeof (option === null || option === void 0 ? void 0 : option.value) === 'string') {
        _this.props.onFormValuesChange({
          queryFilter: option.value
        });
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleRegexSearchClick", function () {
      _this.props.onFormValuesChange({
        isRegexSearch: !_this.props.values.isRegexSearch
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "restoreCaretPosition", function (start, end) {
      window.requestAnimationFrame(function () {
        if (_this.inputSearchRef.current) {
          _this.inputSearchRef.current.selectionStart = start;
          _this.inputSearchRef.current.selectionEnd = end;
        }
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "invalidateSearchValueFromProps", (0, _lodash.default)(function () {
      _this.props.onFormValuesChange({
        searchValue: _this.state.searchValue
      });
    }, 150));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleSearchChange", function (evt) {
      var searchValue = evt.target.value.trim();

      _this.setState({
        searchValue: searchValue
      });

      _this.invalidateSearchValueFromProps();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleClearSearchClick", function (evt) {
      evt.preventDefault();

      if (_this.state.searchValue) {
        _this.setState({
          searchValue: ''
        });

        _this.invalidateSearchValueFromProps();
      }
    });
    _this.state = {
      searchValue: props.values.searchValue
    };
    return _this;
  }

  (0, _createClass2.default)(QueryForm, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          searchQueryRegex = _this$props.searchQueryRegex,
          _this$props$values = _this$props.values,
          isAsc = _this$props$values.isAscendingQueryComparatorOrder,
          queryComparator = _this$props$values.queryComparator,
          searchValue = _this$props$values.searchValue,
          queryFilter = _this$props$values.queryFilter,
          isRegexSearch = _this$props$values.isRegexSearch;
      var isRegexInvalid = isRegexSearch && searchValue.length > 0 && searchQueryRegex == null;
      var regexToggleType = isRegexInvalid ? 'error' : 'info';
      var regexToggleLabel = labels.regexToggle[regexToggleType];
      return /*#__PURE__*/_react.default.createElement(_createStylingFromTheme.StyleUtilsContext.Consumer, null, function (_ref) {
        var styling = _ref.styling,
            base16Theme = _ref.base16Theme;
        return /*#__PURE__*/_react.default.createElement("form", (0, _extends2.default)({
          action: "#",
          onSubmit: _this2.handleSubmit
        }, styling('queryForm')), /*#__PURE__*/_react.default.createElement("div", styling('queryListHeader'), /*#__PURE__*/_react.default.createElement("label", (0, _extends2.default)({
          htmlFor: searchId
        }, styling('srOnly')), "filter query"), /*#__PURE__*/_react.default.createElement("div", styling('querySearch'), /*#__PURE__*/_react.default.createElement("input", {
          ref: _this2.inputSearchRef,
          type: "search",
          value: _this2.state.searchValue,
          onChange: _this2.handleSearchChange,
          placeholder: searchPlaceholder
        }), /*#__PURE__*/_react.default.createElement("button", (0, _extends2.default)({
          type: "reset",
          "aria-label": "clear search",
          "data-invisible": +(_this2.state.searchValue.length === 0) || undefined,
          onClick: _this2.handleClearSearchClick
        }, styling('closeButton'))), /*#__PURE__*/_react.default.createElement("button", (0, _extends2.default)({
          type: "button",
          "aria-label": regexToggleLabel,
          title: regexToggleLabel,
          "data-type": regexToggleType,
          "aria-pressed": isRegexSearch,
          onClick: _this2.handleRegexSearchClick
        }, styling('toggleButton')), /*#__PURE__*/_react.default.createElement(_RegexIcon.RegexIcon, null))), /*#__PURE__*/_react.default.createElement("label", (0, _extends2.default)({
          htmlFor: selectId
        }, styling('srOnly')), "filter by"), /*#__PURE__*/_react.default.createElement(_ui.Select, {
          id: filterSelectId,
          isSearchable: false,
          options: _filters.filterQueryOptions,
          theme: base16Theme,
          value: _filters.filterQueryOptions.find(function (opt) {
            return (opt === null || opt === void 0 ? void 0 : opt.value) === queryFilter;
          }),
          onChange: _this2.handleSelectFilterChange
        })), /*#__PURE__*/_react.default.createElement("div", styling('sortBySection'), /*#__PURE__*/_react.default.createElement("label", {
          htmlFor: selectId
        }, "Sort by"), /*#__PURE__*/_react.default.createElement(_ui.Select, {
          id: selectId,
          isSearchable: false,
          theme: base16Theme,
          value: _comparators.sortQueryOptions.find(function (opt) {
            return (opt === null || opt === void 0 ? void 0 : opt.value) === queryComparator;
          }),
          options: _comparators.sortQueryOptions,
          onChange: _this2.handleSelectComparatorChange
        }), /*#__PURE__*/_react.default.createElement(_SortOrderButton.SortOrderButton, {
          id: 'rtk-query-sort-order-button',
          isAsc: isAsc,
          onChange: _this2.handleButtonGroupClick
        })));
      });
    }
  }]);
  return QueryForm;
}(_react.default.PureComponent);

exports.QueryForm = QueryForm;