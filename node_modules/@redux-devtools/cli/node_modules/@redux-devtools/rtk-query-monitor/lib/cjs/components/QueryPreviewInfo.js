"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.QueryPreviewInfo = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _toolkit = require("@reduxjs/toolkit");

var _query = require("@reduxjs/toolkit/dist/query");

var _react = _interopRequireWildcard(require("react"));

var _formatters = require("../utils/formatters");

var _object = require("../utils/object");

var _rtkQuery = require("../utils/rtk-query");

var _TreeView = require("./TreeView");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var QueryPreviewInfo = /*#__PURE__*/function (_PureComponent) {
  (0, _inherits2.default)(QueryPreviewInfo, _PureComponent);

  var _super = _createSuper(QueryPreviewInfo);

  function QueryPreviewInfo() {
    var _this;

    (0, _classCallCheck2.default)(this, QueryPreviewInfo);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "shouldExpandNode", function (keyPath, value, layer) {
      var lastKey = keyPath[keyPath.length - 1];
      return layer <= 1 && lastKey !== 'query' && lastKey !== 'mutation';
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "selectFormattedQuery", (0, _toolkit.createSelector)(_object.identity, function (resInfo) {
      var state = resInfo.state,
          queryKey = resInfo.queryKey,
          reducerPath = resInfo.reducerPath;
      var startedAt = state.startedTimeStamp ? new Date(state.startedTimeStamp).toISOString() : '-';
      var loadedAt = state.fulfilledTimeStamp ? new Date(state.fulfilledTimeStamp).toISOString() : '-';
      var statusFlags = (0, _rtkQuery.getQueryStatusFlags)(state);
      var timings = {
        startedAt: startedAt,
        loadedAt: loadedAt,
        duration: '-'
      };

      if (state.fulfilledTimeStamp && state.startedTimeStamp && state.status !== _query.QueryStatus.pending && state.startedTimeStamp <= state.fulfilledTimeStamp) {
        timings.duration = (0, _formatters.formatMs)(state.fulfilledTimeStamp - state.startedTimeStamp);
      }

      if (resInfo.type === 'query') {
        return {
          key: queryKey,
          reducerPath: reducerPath,
          query: resInfo.state,
          statusFlags: statusFlags,
          timings: timings
        };
      }

      return {
        key: queryKey,
        reducerPath: reducerPath,
        mutation: resInfo.state,
        statusFlags: statusFlags,
        timings: timings
      };
    }));
    return _this;
  }

  (0, _createClass2.default)(QueryPreviewInfo, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          resInfo = _this$props.resInfo,
          isWideLayout = _this$props.isWideLayout;
      var formattedQuery = this.selectFormattedQuery(resInfo);
      return /*#__PURE__*/_react.default.createElement(_TreeView.TreeView, {
        data: formattedQuery,
        isWideLayout: isWideLayout,
        shouldExpandNode: this.shouldExpandNode
      });
    }
  }]);
  return QueryPreviewInfo;
}(_react.PureComponent);

exports.QueryPreviewInfo = QueryPreviewInfo;