import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { Component } from 'react';
export function mapProps(mapper) {
  return function mapPropsHoc(Comp) {
    var MapPropsHoc = /*#__PURE__*/function (_Component) {
      _inherits(MapPropsHoc, _Component);

      var _super = _createSuper(MapPropsHoc);

      function MapPropsHoc() {
        _classCallCheck(this, MapPropsHoc);

        return _super.apply(this, arguments);
      }

      _createClass(MapPropsHoc, [{
        key: "render",
        value: function render() {
          var mappedProps = mapper(this.props);
          return /*#__PURE__*/React.createElement(Comp, mappedProps);
        }
      }]);

      return MapPropsHoc;
    }(Component);

    _defineProperty(MapPropsHoc, "displayName", "mapProps(".concat(Comp.displayName || Comp.name || 'Component', ")"));

    return MapPropsHoc;
  };
}