import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React from 'react';
import { StyleUtilsContext } from '../styles/createStylingFromTheme';
import { createTreeItemLabelRenderer } from '../styles/tree';
import { QueryPreviewTabs } from '../types';
import { QueryPreviewHeader } from '../components/QueryPreviewHeader';
import { QueryPreviewInfo } from '../components/QueryPreviewInfo';
import { QueryPreviewApi } from '../components/QueryPreviewApi';
import { QueryPreviewSubscriptions } from '../components/QueryPreviewSubscriptions';
import { QueryPreviewTags } from '../components/QueryPreviewTags';
import { NoRtkQueryApi } from '../components/NoRtkQueryApi';
import { mapProps } from './mapProps';
import { QueryPreviewActions } from '../components/QueryPreviewActions';
import { isTabVisible } from '../utils/tabs';
var MappedQueryPreviewTags = mapProps(function (_ref) {
  var selectors = _ref.selectors,
      selectorsSource = _ref.selectorsSource,
      isWideLayout = _ref.isWideLayout,
      resInfo = _ref.resInfo;
  return {
    resInfo: resInfo,
    tags: selectors.selectCurrentQueryTags(selectorsSource),
    isWideLayout: isWideLayout
  };
})(QueryPreviewTags);
var MappedQueryPreviewInfo = mapProps(function (_ref2) {
  var resInfo = _ref2.resInfo,
      isWideLayout = _ref2.isWideLayout;
  return {
    resInfo: resInfo,
    isWideLayout: isWideLayout
  };
})(QueryPreviewInfo);
var MappedQuerySubscriptipns = mapProps(function (_ref3) {
  var selectors = _ref3.selectors,
      selectorsSource = _ref3.selectorsSource,
      isWideLayout = _ref3.isWideLayout;
  return {
    isWideLayout: isWideLayout,
    subscriptions: selectors.selectSubscriptionsOfCurrentQuery(selectorsSource)
  };
})(QueryPreviewSubscriptions);
var MappedApiPreview = mapProps(function (_ref4) {
  var isWideLayout = _ref4.isWideLayout,
      selectors = _ref4.selectors,
      selectorsSource = _ref4.selectorsSource;
  return {
    isWideLayout: isWideLayout,
    apiState: selectors.selectApiOfCurrentQuery(selectorsSource),
    apiStats: selectors.selectApiStatsOfCurrentQuery(selectorsSource)
  };
})(QueryPreviewApi);
var MappedQueryPreviewActions = mapProps(function (_ref5) {
  var isWideLayout = _ref5.isWideLayout,
      selectorsSource = _ref5.selectorsSource,
      selectors = _ref5.selectors;
  return {
    isWideLayout: isWideLayout,
    actionsOfQuery: selectors.selectActionsOfCurrentQuery(selectorsSource)
  };
})(QueryPreviewActions);
var tabs = [{
  label: 'Query',
  value: QueryPreviewTabs.queryinfo,
  component: MappedQueryPreviewInfo,
  visible: {
    query: true,
    mutation: true,
    default: true
  }
}, {
  label: 'Actions',
  value: QueryPreviewTabs.actions,
  component: MappedQueryPreviewActions,
  visible: {
    query: true,
    mutation: true,
    default: true
  }
}, {
  label: 'Tags',
  value: QueryPreviewTabs.queryTags,
  component: MappedQueryPreviewTags,
  visible: {
    query: true,
    mutation: false,
    default: true
  }
}, {
  label: 'Subs',
  value: QueryPreviewTabs.querySubscriptions,
  component: MappedQuerySubscriptipns,
  visible: {
    query: true,
    mutation: false,
    default: true
  }
}, {
  label: 'Api',
  value: QueryPreviewTabs.apiConfig,
  component: MappedApiPreview
}];
export var QueryPreview = /*#__PURE__*/function (_React$PureComponent) {
  _inherits(QueryPreview, _React$PureComponent);

  var _super = _createSuper(QueryPreview);

  function QueryPreview(props) {
    var _this;

    _classCallCheck(this, QueryPreview);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "renderLabelWithCounter", function (label, counter) {
      var counterAsString = counter.toFixed(0);

      if (counterAsString.length > 3) {
        counterAsString = counterAsString.slice(0, 2) + '...';
      }

      return "".concat(label, "(").concat(counterAsString, ")");
    });

    _defineProperty(_assertThisInitialized(_this), "renderTabLabel", function (tab) {
      var _this$props = _this.props,
          selectors = _this$props.selectors,
          selectorsSource = _this$props.selectorsSource,
          resInfo = _this$props.resInfo;
      var tabCount = selectors.selectTabCounters(selectorsSource)[tab.value];
      var tabLabel = tab.label;

      if (tabLabel === 'query' && (resInfo === null || resInfo === void 0 ? void 0 : resInfo.type) === 'mutation') {
        tabLabel = resInfo.type;
      }

      if (tabCount > 0) {
        return _this.renderLabelWithCounter(tabLabel, tabCount);
      }

      return tabLabel;
    });

    _this.labelRenderer = createTreeItemLabelRenderer(_this.props.styling);
    return _this;
  }

  _createClass(QueryPreview, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props2 = this.props,
          resInfo = _this$props2.resInfo,
          selectedTab = _this$props2.selectedTab,
          onTabChange = _this$props2.onTabChange,
          hasNoApis = _this$props2.hasNoApis;

      var _ref6 = tabs.find(function (tab) {
        return tab.value === selectedTab;
      }) || tabs[0],
          TabComponent = _ref6.component;

      if (!resInfo) {
        return /*#__PURE__*/React.createElement(StyleUtilsContext.Consumer, null, function (_ref7) {
          var styling = _ref7.styling;
          return /*#__PURE__*/React.createElement("div", styling('queryPreview'), /*#__PURE__*/React.createElement(QueryPreviewHeader, {
            selectedTab: selectedTab,
            onTabChange: onTabChange,
            tabs: tabs.filter(function (tab) {
              return isTabVisible(tab, 'default');
            }),
            renderTabLabel: _this2.renderTabLabel
          }), hasNoApis && /*#__PURE__*/React.createElement(NoRtkQueryApi, null));
        });
      }

      return /*#__PURE__*/React.createElement(StyleUtilsContext.Consumer, null, function (_ref8) {
        var styling = _ref8.styling;
        return /*#__PURE__*/React.createElement("div", styling('queryPreview'), /*#__PURE__*/React.createElement(QueryPreviewHeader, {
          selectedTab: selectedTab,
          onTabChange: onTabChange,
          tabs: tabs.filter(function (tab) {
            return isTabVisible(tab, resInfo.type);
          }),
          renderTabLabel: _this2.renderTabLabel
        }), /*#__PURE__*/React.createElement(TabComponent, _this2.props));
      });
    }
  }]);

  return QueryPreview;
}(React.PureComponent);