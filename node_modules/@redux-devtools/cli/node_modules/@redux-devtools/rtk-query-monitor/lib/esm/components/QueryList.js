import _extends from "@babel/runtime/helpers/extends";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { PureComponent } from 'react';
import { StyleUtilsContext } from '../styles/createStylingFromTheme';
import { isQuerySelected } from '../utils/rtk-query';
export var QueryList = /*#__PURE__*/function (_PureComponent) {
  _inherits(QueryList, _PureComponent);

  var _super = _createSuper(QueryList);

  function QueryList() {
    _classCallCheck(this, QueryList);

    return _super.apply(this, arguments);
  }

  _createClass(QueryList, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          resInfos = _this$props.resInfos,
          selectedQueryKey = _this$props.selectedQueryKey,
          onSelectQuery = _this$props.onSelectQuery;
      return /*#__PURE__*/React.createElement(StyleUtilsContext.Consumer, null, function (_ref) {
        var styling = _ref.styling;
        return /*#__PURE__*/React.createElement("ul", styling('queryList'), resInfos.map(function (resInfo) {
          var isSelected = isQuerySelected(selectedQueryKey, resInfo);
          return /*#__PURE__*/React.createElement("li", _extends({
            key: resInfo.queryKey,
            onClick: function onClick() {
              return onSelectQuery(resInfo);
            }
          }, styling(['queryListItem', isSelected && 'queryListItemSelected'], isSelected)), /*#__PURE__*/React.createElement("p", styling('queryListItemKey'), QueryList.formatQuery(resInfo)), /*#__PURE__*/React.createElement("div", styling('queryStatusWrapper'), /*#__PURE__*/React.createElement("strong", styling(['queryStatus', 'queryType']), resInfo.type === 'query' ? 'Q' : 'M'), /*#__PURE__*/React.createElement("p", styling('queryStatus'), resInfo.state.status)));
        }));
      });
    }
  }], [{
    key: "isItemSelected",
    value: function isItemSelected(selectedQueryKey, queryInfo) {
      return !!selectedQueryKey && selectedQueryKey.queryKey === queryInfo.queryKey && selectedQueryKey.reducerPath === queryInfo.reducerPath;
    }
  }, {
    key: "formatQuery",
    value: function formatQuery(resInfo) {
      var _resInfo$state$endpoi;

      var key = resInfo.type === 'query' ? resInfo.queryKey : "".concat((_resInfo$state$endpoi = resInfo.state.endpointName) !== null && _resInfo$state$endpoi !== void 0 ? _resInfo$state$endpoi : '', " ").concat(resInfo.queryKey);
      return key;
    }
  }]);

  return QueryList;
}(PureComponent);