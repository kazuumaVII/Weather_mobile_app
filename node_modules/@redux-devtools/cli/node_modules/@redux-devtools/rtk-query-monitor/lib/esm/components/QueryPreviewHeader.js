import _extends from "@babel/runtime/helpers/extends";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React from 'react';
import { StyleUtilsContext } from '../styles/createStylingFromTheme';
import { emptyArray } from '../utils/object';
export var QueryPreviewHeader = /*#__PURE__*/function (_React$Component) {
  _inherits(QueryPreviewHeader, _React$Component);

  var _super = _createSuper(QueryPreviewHeader);

  function QueryPreviewHeader() {
    var _this;

    _classCallCheck(this, QueryPreviewHeader);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "handleTabClick", function (tab) {
      if (_this.props.selectedTab !== tab.value) {
        _this.props.onTabChange(tab.value);
      }
    });

    return _this;
  }

  _createClass(QueryPreviewHeader, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          tabs = _this$props.tabs,
          selectedTab = _this$props.selectedTab,
          renderTabLabel = _this$props.renderTabLabel;
      return /*#__PURE__*/React.createElement(StyleUtilsContext.Consumer, null, function (_ref) {
        var styling = _ref.styling;
        return /*#__PURE__*/React.createElement("div", styling('previewHeader'), /*#__PURE__*/React.createElement("div", styling('tabSelector'), tabs.map(function (tab) {
          return /*#__PURE__*/React.createElement("div", _extends({
            onClick: function onClick() {
              return _this2.handleTabClick(tab);
            },
            key: tab.value
          }, styling(['selectorButton', tab.value === selectedTab && 'selectorButtonSelected'], tab.value === selectedTab)), /*#__PURE__*/React.createElement("span", null, renderTabLabel ? renderTabLabel(tab) : tab.label));
        })));
      });
    }
  }]);

  return QueryPreviewHeader;
}(React.Component);

_defineProperty(QueryPreviewHeader, "defaultProps", {
  tabs: emptyArray
});