import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { PureComponent } from 'react';
import { TreeView } from './TreeView';
export var QueryPreviewTags = /*#__PURE__*/function (_PureComponent) {
  _inherits(QueryPreviewTags, _PureComponent);

  var _super = _createSuper(QueryPreviewTags);

  function QueryPreviewTags(props) {
    var _this;

    _classCallCheck(this, QueryPreviewTags);

    _this = _super.call(this, props);
    _this.state = {
      data: {
        tags: props.tags
      }
    };
    return _this;
  }

  _createClass(QueryPreviewTags, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          isWideLayout = _this$props.isWideLayout,
          tags = _this$props.tags;
      return /*#__PURE__*/React.createElement(TreeView, {
        data: tags,
        isWideLayout: isWideLayout
      });
    }
  }]);

  return QueryPreviewTags;
}(PureComponent);