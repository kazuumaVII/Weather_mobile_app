"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compare = compare;
exports.fromPath = exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _javascriptStringify = require("javascript-stringify");

var _objectPath = _interopRequireDefault(require("object-path"));

var _jsan = _interopRequireDefault(require("jsan"));

var _simpleDiff = _interopRequireDefault(require("simple-diff"));

var _es6template = _interopRequireDefault(require("es6template"));

var _ui = require("@redux-devtools/ui");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var fromPath = function fromPath(path) {
  return path.map(function (a) {
    return typeof a === 'string' ? ".".concat(a) : "[".concat(a, "]");
  }).join('');
};

exports.fromPath = fromPath;

function getState(s, // eslint-disable-next-line @typescript-eslint/ban-types
defaultValue) {
  if (!s) return defaultValue;
  return JSON.parse(_jsan.default.stringify(s.state));
}

function compare(s1, s2, cb, // eslint-disable-next-line @typescript-eslint/ban-types
defaultValue) {
  var paths = []; // Already processed

  function generate(event) {
    var curState;
    var path = fromPath(event.newPath);

    if (event.type === 'remove-item' || event.type === 'move-item') {
      if (paths.length && paths.indexOf(path) !== -1) return;
      paths.push(path); // eslint-disable-next-line @typescript-eslint/ban-types

      var v = _objectPath.default.get(s2.state, event.newPath);

      curState = v.length;
      path += '.length';
    } else if (event.type === 'add-item') {
      generate({
        type: 'move-item',
        newPath: event.newPath
      });
      path += "[".concat(event.newIndex, "]");
      curState = (0, _javascriptStringify.stringify)(event.newValue);
    } else {
      curState = (0, _javascriptStringify.stringify)(event.newValue);
    } // console.log(`expect(store${path}).toEqual(${curState});`);


    cb({
      path: path,
      curState: curState
    });
  }

  (0, _simpleDiff.default)(getState(s1, defaultValue), getState(s2, defaultValue)
  /* , { idProp: '*' } */
  ).forEach(generate);
}

var TestGenerator = /*#__PURE__*/function (_ref) {
  (0, _inherits2.default)(TestGenerator, _ref);

  var _super = _createSuper(TestGenerator);

  function TestGenerator() {
    (0, _classCallCheck2.default)(this, TestGenerator);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(TestGenerator, [{
    key: "getMethod",
    value: function getMethod(action) {
      var type = action.type;
      if (type[0] === '┗') type = type.substr(1).trim();
      var args = action.arguments ? action.arguments.map(function (arg) {
        return (0, _javascriptStringify.stringify)(arg);
      }).join(',') : '';
      return "".concat(type, "(").concat(args, ")");
    }
  }, {
    key: "getAction",
    value: function getAction(action) {
      if (action.type === '@@INIT') return '{}';
      return (0, _javascriptStringify.stringify)(action);
    }
  }, {
    key: "generateTest",
    value: function generateTest() {
      var _this$props = this.props,
          computedStates = _this$props.computedStates,
          actions = _this$props.actions,
          selectedActionId = _this$props.selectedActionId,
          startActionId = _this$props.startActionId,
          isVanilla = _this$props.isVanilla,
          name = _this$props.name;
      if (!actions || !computedStates || computedStates.length < 1) return '';
      var _this$props2 = this.props,
          wrap = _this$props2.wrap,
          assertion = _this$props2.assertion,
          dispatcher = _this$props2.dispatcher,
          indentation = _this$props2.indentation;
      if (typeof assertion === 'string') assertion = _es6template.default.compile(assertion);

      if (typeof wrap === 'string') {
        var ident = /\n.+\$\{assertions}/.exec(wrap);
        if (ident) indentation = ident[0].length - 13;
        wrap = _es6template.default.compile(wrap);
      }

      if (typeof dispatcher === 'string') dispatcher = _es6template.default.compile(dispatcher);
      var space = '';
      if (indentation) space = Array(indentation).join(' ');
      var r = '';
      var isFirst = true;
      var i;
      if (startActionId !== null) i = startActionId;else if (selectedActionId !== null) i = selectedActionId;else i = computedStates.length - 1;
      var startIdx = i > 0 ? i : 1;

      var addAssertions = function addAssertions(_ref2) {
        var path = _ref2.path,
            curState = _ref2.curState;
        r += "".concat(space).concat(assertion({
          path: path,
          curState: curState
        }), "\n");
      };

      while (actions[i]) {
        if (!isVanilla ||
        /* eslint-disable-next-line no-useless-escape */
        /^┗?\s?[a-zA-Z0-9_@.\[\]-]+?$/.test(actions[i].action.type)) {
          if (isFirst) isFirst = false;else r += space;

          if (!isVanilla || actions[i].action.type[0] !== '@') {
            r += dispatcher({
              action: !isVanilla ? this.getAction(actions[i].action) : this.getMethod(actions[i].action),
              prevState: i > 0 ? (0, _javascriptStringify.stringify)(computedStates[i - 1].state) : undefined
            }) + '\n';
          }

          if (!isVanilla) {
            addAssertions({
              path: '',
              curState: (0, _javascriptStringify.stringify)(computedStates[i].state)
            });
          } else {
            compare(computedStates[i - 1], computedStates[i], addAssertions, isVanilla && {});
          }
        }

        i++;
        if (i > selectedActionId) break;
      }

      r = r.trim();

      if (wrap) {
        if (!isVanilla) r = wrap({
          name: name,
          assertions: r
        });else {
          r = wrap({
            name: /^[a-zA-Z0-9_-]+?$/.test(name) ? name : 'Store',
            actionName: (selectedActionId === null || selectedActionId > 0) && actions[startIdx] ? actions[startIdx].action.type.replace(/[^a-zA-Z0-9_-]+/, '') : 'should return the initial state',
            initialState: (0, _javascriptStringify.stringify)(computedStates[startIdx - 1].state),
            assertions: r
          });
        }
      }

      return r;
    }
  }, {
    key: "render",
    value: function render() {
      var code = this.generateTest();

      if (!this.props.useCodemirror) {
        return /*#__PURE__*/_react.default.createElement("textarea", {
          style: {
            padding: '10px',
            width: '100%',
            height: '100%'
          },
          defaultValue: code
        });
      }

      return /*#__PURE__*/_react.default.createElement(_ui.Editor, {
        value: code
      });
    }
  }]);
  return TestGenerator;
}(_react.PureComponent || _react.Component);

exports.default = TestGenerator;
(0, _defineProperty2.default)(TestGenerator, "defaultProps", {
  useCodemirror: true,
  selectedActionId: null,
  startActionId: null
});