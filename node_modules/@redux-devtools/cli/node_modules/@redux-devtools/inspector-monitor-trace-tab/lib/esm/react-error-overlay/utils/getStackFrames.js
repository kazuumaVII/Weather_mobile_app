/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { parse } from './parser';
import { map } from './mapper';
import { unmap } from './unmapper';
import { toExclude } from '../../presets';

function getStackFrames(error) {
  var unhandledRejection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var contextSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;
  var parsedFrames = parse(error);
  var enhancedFramesPromise;

  if (error.__unmap_source) {
    enhancedFramesPromise = unmap( // $FlowFixMe
    error.__unmap_source, parsedFrames, contextSize);
  } else {
    enhancedFramesPromise = map(parsedFrames, contextSize);
  }

  return enhancedFramesPromise.then(function (enhancedFrames) {
    /*
    if (
      enhancedFrames
        .map(f => f._originalFileName)
        .filter(f => f != null && f.indexOf('node_modules') === -1).length === 0
    ) {
      return null;
    }
    */
    return enhancedFrames.filter(function (_ref) {
      var functionName = _ref.functionName,
          fileName = _ref.fileName;
      return (functionName == null || functionName.indexOf('__stack_frame_overlay_proxy_console__') === -1) && !toExclude.test(fileName);
    });
  });
}

export default getStackFrames;
export { getStackFrames };