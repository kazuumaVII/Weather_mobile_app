/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** A container holding a script line. */
declare class ScriptLine {
    /** The line number of this line of source. */
    lineNumber: number;
    /** The content (or value) of this line of source. */
    content: string;
    /** Whether or not this line should be highlighted. Particularly useful for error reporting with context. */
    highlight: boolean;
    constructor(lineNumber: number, content: string, highlight?: boolean);
}
/**
 * A representation of a stack frame.
 */
declare class StackFrame {
    functionName: string | null;
    fileName: string | null;
    lineNumber: number | null;
    columnNumber: number | null;
    _originalFunctionName: string | null;
    _originalFileName: string | null;
    _originalLineNumber: number | null;
    _originalColumnNumber: number | null;
    _scriptCode: ScriptLine[] | null;
    _originalScriptCode: ScriptLine[] | null;
    constructor(functionName?: string | null, fileName?: string | null, lineNumber?: number | null, columnNumber?: number | null, scriptCode?: ScriptLine[] | null, sourceFunctionName?: string | null, sourceFileName?: string | null, sourceLineNumber?: number | null, sourceColumnNumber?: number | null, sourceScriptCode?: ScriptLine[] | null);
    /**
     * Returns the name of this function.
     */
    getFunctionName(): string;
    /**
     * Returns the source of the frame.
     * This contains the file name, line number, and column number when available.
     */
    getSource(): string;
    /**
     * Returns a pretty version of this stack frame.
     */
    toString(): string;
}
export { StackFrame, ScriptLine };
export default StackFrame;
