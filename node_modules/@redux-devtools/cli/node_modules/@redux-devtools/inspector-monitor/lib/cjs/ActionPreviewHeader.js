"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var ActionPreviewHeader = function ActionPreviewHeader(_ref) {
  var styling = _ref.styling,
      inspectedPath = _ref.inspectedPath,
      onInspectPath = _ref.onInspectPath,
      tabName = _ref.tabName,
      onSelectTab = _ref.onSelectTab,
      tabs = _ref.tabs;
  return /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
    key: "previewHeader"
  }, styling('previewHeader')), /*#__PURE__*/_react.default.createElement("div", styling('tabSelector'), tabs.map(function (tab) {
    return /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
      onClick: function onClick() {
        return onSelectTab(tab.name);
      },
      key: tab.name
    }, styling(['selectorButton', tab.name === tabName && 'selectorButtonSelected'], tab.name === tabName)), tab.name);
  })), /*#__PURE__*/_react.default.createElement("div", styling('inspectedPath'), inspectedPath.length ? /*#__PURE__*/_react.default.createElement("span", styling('inspectedPathKey'), /*#__PURE__*/_react.default.createElement("a", (0, _extends2.default)({
    onClick: function onClick() {
      return onInspectPath([]);
    }
  }, styling('inspectedPathKeyLink')), tabName)) : tabName, inspectedPath.map(function (key, idx) {
    return idx === inspectedPath.length - 1 ? /*#__PURE__*/_react.default.createElement("span", {
      key: key
    }, key) : /*#__PURE__*/_react.default.createElement("span", (0, _extends2.default)({
      key: key
    }, styling('inspectedPathKey')), /*#__PURE__*/_react.default.createElement("a", (0, _extends2.default)({
      onClick: function onClick() {
        return onInspectPath(inspectedPath.slice(0, idx + 1));
      }
    }, styling('inspectedPathKeyLink')), key));
  })));
};

ActionPreviewHeader.propTypes = {
  tabs: _propTypes.default.array.isRequired,
  styling: _propTypes.default.func.isRequired,
  inspectedPath: _propTypes.default.array.isRequired,
  onInspectPath: _propTypes.default.func.isRequired,
  tabName: _propTypes.default.string.isRequired,
  onSelectTab: _propTypes.default.func.isRequired
};
var _default = ActionPreviewHeader;
exports.default = _default;