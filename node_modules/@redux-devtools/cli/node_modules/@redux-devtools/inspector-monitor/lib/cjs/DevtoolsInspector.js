"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactBase16Styling = require("react-base16-styling");

var _core = require("@redux-devtools/core");

var _createStylingFromTheme = require("./utils/createStylingFromTheme");

var _ActionList = _interopRequireDefault(require("./ActionList"));

var _ActionPreview = _interopRequireDefault(require("./ActionPreview"));

var _getInspectedState = _interopRequireDefault(require("./utils/getInspectedState"));

var _createDiffPatcher = _interopRequireDefault(require("./createDiffPatcher"));

var _redux = require("./redux");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

// eslint-disable-next-line @typescript-eslint/unbound-method
var commit = _core.ActionCreators.commit,
    sweep = _core.ActionCreators.sweep,
    toggleAction = _core.ActionCreators.toggleAction,
    jumpToAction = _core.ActionCreators.jumpToAction,
    jumpToState = _core.ActionCreators.jumpToState,
    reorderAction = _core.ActionCreators.reorderAction;

function getLastActionId(props) {
  return props.stagedActionIds[props.stagedActionIds.length - 1];
}

function getCurrentActionId(props, monitorState) {
  return monitorState.selectedActionId === null ? props.stagedActionIds[props.currentStateIndex] : monitorState.selectedActionId;
}

function getFromState(actionIndex, stagedActionIds, computedStates, monitorState) {
  var startActionId = monitorState.startActionId;

  if (startActionId === null) {
    return actionIndex > 0 ? computedStates[actionIndex - 1] : null;
  }

  var fromStateIdx = stagedActionIds.indexOf(startActionId - 1);
  if (fromStateIdx === -1) fromStateIdx = 0;
  return computedStates[fromStateIdx];
}

function createIntermediateState(props, monitorState) {
  var supportImmutable = props.supportImmutable,
      computedStates = props.computedStates,
      stagedActionIds = props.stagedActionIds,
      actions = props.actionsById,
      diffObjectHash = props.diffObjectHash,
      diffPropertyFilter = props.diffPropertyFilter;
  var inspectedStatePath = monitorState.inspectedStatePath,
      inspectedActionPath = monitorState.inspectedActionPath;
  var currentActionId = getCurrentActionId(props, monitorState);
  var currentAction = actions[currentActionId] && actions[currentActionId].action;
  var actionIndex = stagedActionIds.indexOf(currentActionId);
  var fromState = getFromState(actionIndex, stagedActionIds, computedStates, monitorState);
  var toState = computedStates[actionIndex];
  var error = toState && toState.error;
  var fromInspectedState = !error && fromState && (0, _getInspectedState.default)(fromState.state, inspectedStatePath, supportImmutable);
  var toInspectedState = !error && toState && (0, _getInspectedState.default)(toState.state, inspectedStatePath, supportImmutable);
  var delta = !error && fromState && toState && (0, _createDiffPatcher.default)(diffObjectHash, diffPropertyFilter).diff(fromInspectedState, toInspectedState);
  return {
    delta: delta,
    nextState: toState && (0, _getInspectedState.default)(toState.state, inspectedStatePath, false),
    action: (0, _getInspectedState.default)(currentAction, inspectedActionPath, false),
    error: error
  };
}

function createThemeState(props) {
  var base16Theme = (0, _reactBase16Styling.getBase16Theme)(props.theme, _createStylingFromTheme.base16Themes);
  var theme = props.invertTheme ? (0, _reactBase16Styling.invertTheme)(props.theme) : props.theme;
  var styling = (0, _createStylingFromTheme.createStylingFromTheme)(theme);
  return {
    base16Theme: base16Theme,
    styling: styling
  };
}

var DevtoolsInspector = /*#__PURE__*/function (_PureComponent) {
  (0, _inherits2.default)(DevtoolsInspector, _PureComponent);

  var _super = _createSuper(DevtoolsInspector);

  function DevtoolsInspector() {
    var _this;

    (0, _classCallCheck2.default)(this, DevtoolsInspector);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "state", _objectSpread(_objectSpread({}, createIntermediateState(_this.props, _this.props.monitorState)), {}, {
      isWideLayout: false,
      themeState: createThemeState(_this.props)
    }));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "updateMonitorState", function (monitorState) {
      _this.props.dispatch((0, _redux.updateMonitorState)(monitorState));
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "inspectorCreateRef", function (node) {
      _this.inspectorRef = node;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleToggleAction", function (actionId) {
      _this.props.dispatch(toggleAction(actionId));
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleJumpToState", function (actionId) {
      if (jumpToAction) {
        _this.props.dispatch(jumpToAction(actionId));
      } else {
        // Fallback for redux-devtools-instrument < 1.5
        var _index = _this.props.stagedActionIds.indexOf(actionId);

        if (_index !== -1) _this.props.dispatch(jumpToState(_index));
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleReorderAction", function (actionId, beforeActionId) {
      if (reorderAction) _this.props.dispatch(reorderAction(actionId, beforeActionId));
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleCommit", function () {
      _this.props.dispatch(commit());
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleSweep", function () {
      _this.props.dispatch(sweep());
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleSearch", function (val) {
      _this.updateMonitorState({
        searchValue: val
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleSelectAction", function (e, actionId) {
      var monitorState = _this.props.monitorState;
      var startActionId;
      var selectedActionId;

      if (e.shiftKey && monitorState.selectedActionId !== null) {
        if (monitorState.startActionId !== null) {
          if (actionId >= monitorState.startActionId) {
            startActionId = Math.min(monitorState.startActionId, monitorState.selectedActionId);
            selectedActionId = actionId;
          } else {
            selectedActionId = Math.max(monitorState.startActionId, monitorState.selectedActionId);
            startActionId = actionId;
          }
        } else {
          startActionId = Math.min(actionId, monitorState.selectedActionId);
          selectedActionId = Math.max(actionId, monitorState.selectedActionId);
        }
      } else {
        startActionId = null;

        if (actionId === monitorState.selectedActionId || monitorState.startActionId !== null) {
          selectedActionId = null;
        } else {
          selectedActionId = actionId;
        }
      }

      _this.updateMonitorState({
        startActionId: startActionId,
        selectedActionId: selectedActionId
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleInspectPath", function (pathType, path) {
      _this.updateMonitorState((0, _defineProperty2.default)({}, pathType, path));
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleSelectTab", function (tabName) {
      _this.updateMonitorState({
        tabName: tabName
      });
    });
    return _this;
  }

  (0, _createClass2.default)(DevtoolsInspector, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.updateSizeMode();
      this.updateSizeTimeout = window.setInterval(this.updateSizeMode.bind(this), 150);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      clearTimeout(this.updateSizeTimeout);
    }
  }, {
    key: "updateSizeMode",
    value: function updateSizeMode() {
      var isWideLayout = this.inspectorRef.offsetWidth > 500;

      if (isWideLayout !== this.state.isWideLayout) {
        this.setState({
          isWideLayout: isWideLayout
        });
      }
    }
  }, {
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(nextProps) {
      var nextMonitorState = nextProps.monitorState;
      var monitorState = this.props.monitorState;

      if (getCurrentActionId(this.props, monitorState) !== getCurrentActionId(nextProps, nextMonitorState) || monitorState.startActionId !== nextMonitorState.startActionId || monitorState.inspectedStatePath !== nextMonitorState.inspectedStatePath || monitorState.inspectedActionPath !== nextMonitorState.inspectedActionPath || this.props.computedStates !== nextProps.computedStates || this.props.stagedActionIds !== nextProps.stagedActionIds) {
        this.setState(createIntermediateState(nextProps, nextMonitorState));
      }

      if (this.props.theme !== nextProps.theme || this.props.invertTheme !== nextProps.invertTheme) {
        this.setState({
          themeState: createThemeState(nextProps)
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          actionIds = _this$props.stagedActionIds,
          actions = _this$props.actionsById,
          computedStates = _this$props.computedStates,
          draggableActions = _this$props.draggableActions,
          tabs = _this$props.tabs,
          invertTheme = _this$props.invertTheme,
          skippedActionIds = _this$props.skippedActionIds,
          currentStateIndex = _this$props.currentStateIndex,
          monitorState = _this$props.monitorState,
          dataTypeKey = _this$props.dataTypeKey,
          hideMainButtons = _this$props.hideMainButtons,
          hideActionButtons = _this$props.hideActionButtons;
      var selectedActionId = monitorState.selectedActionId,
          startActionId = monitorState.startActionId,
          searchValue = monitorState.searchValue,
          tabName = monitorState.tabName;
      var inspectedPathType = tabName === 'Action' ? 'inspectedActionPath' : 'inspectedStatePath';
      var _this$state = this.state,
          themeState = _this$state.themeState,
          isWideLayout = _this$state.isWideLayout,
          action = _this$state.action,
          nextState = _this$state.nextState,
          delta = _this$state.delta,
          error = _this$state.error;
      var base16Theme = themeState.base16Theme,
          styling = themeState.styling;
      return /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
        key: "inspector",
        "data-testid": "inspector",
        ref: this.inspectorCreateRef
      }, styling(['inspector', isWideLayout && 'inspectorWide'], isWideLayout)), /*#__PURE__*/_react.default.createElement(_ActionList.default, {
        actions: actions,
        actionIds: actionIds,
        isWideLayout: isWideLayout,
        searchValue: searchValue,
        selectedActionId: selectedActionId,
        startActionId: startActionId,
        skippedActionIds: skippedActionIds,
        draggableActions: draggableActions,
        hideMainButtons: hideMainButtons,
        hideActionButtons: hideActionButtons,
        styling: styling,
        onSearch: this.handleSearch,
        onSelect: this.handleSelectAction,
        onToggleAction: this.handleToggleAction,
        onJumpToState: this.handleJumpToState,
        onCommit: this.handleCommit,
        onSweep: this.handleSweep,
        onReorderAction: this.handleReorderAction,
        currentActionId: actionIds[currentStateIndex],
        lastActionId: getLastActionId(this.props)
      }), /*#__PURE__*/_react.default.createElement(_ActionPreview.default, {
        base16Theme: base16Theme,
        invertTheme: invertTheme,
        isWideLayout: isWideLayout,
        tabs: tabs,
        tabName: tabName,
        delta: delta,
        error: error,
        nextState: nextState,
        computedStates: computedStates,
        action: action,
        actions: actions,
        selectedActionId: selectedActionId,
        startActionId: startActionId,
        dataTypeKey: dataTypeKey,
        monitorState: this.props.monitorState,
        updateMonitorState: this.updateMonitorState,
        styling: styling,
        onInspectPath: function onInspectPath(path) {
          return _this2.handleInspectPath(inspectedPathType, path);
        },
        inspectedPath: monitorState[inspectedPathType],
        onSelectTab: this.handleSelectTab
      }));
    }
  }]);
  return DevtoolsInspector;
}(_react.PureComponent);

(0, _defineProperty2.default)(DevtoolsInspector, "propTypes", {
  dispatch: _propTypes.default.func,
  computedStates: _propTypes.default.array,
  stagedActionIds: _propTypes.default.array,
  actionsById: _propTypes.default.object,
  currentStateIndex: _propTypes.default.number,
  monitorState: _propTypes.default.shape({
    initialScrollTop: _propTypes.default.number
  }),
  preserveScrollTop: _propTypes.default.bool,
  draggableActions: _propTypes.default.bool,
  select: _propTypes.default.func.isRequired,
  theme: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string]),
  supportImmutable: _propTypes.default.bool,
  diffObjectHash: _propTypes.default.func,
  diffPropertyFilter: _propTypes.default.func,
  hideMainButtons: _propTypes.default.bool,
  hideActionButtons: _propTypes.default.bool,
  invertTheme: _propTypes.default.bool,
  skippedActionIds: _propTypes.default.array,
  dataTypeKey: _propTypes.default.any,
  tabs: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.func])
});
(0, _defineProperty2.default)(DevtoolsInspector, "update", _redux.reducer);
(0, _defineProperty2.default)(DevtoolsInspector, "defaultProps", {
  select: function select(state) {
    return state;
  },
  supportImmutable: false,
  draggableActions: true,
  theme: 'inspector',
  invertTheme: true
});
var _default = DevtoolsInspector;
exports.default = _default;