"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _reactJsonTree = require("react-json-tree");

var _javascriptStringify = require("javascript-stringify");

var _getItemString = _interopRequireDefault(require("./getItemString"));

var _getJsonTreeTheme = _interopRequireDefault(require("./getJsonTreeTheme"));

var _excluded = ["styling", "base16Theme"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function stringifyAndShrink(val, isWideLayout) {
  if (val === null) {
    return 'null';
  }

  var str = (0, _javascriptStringify.stringify)(val);

  if (typeof str === 'undefined') {
    return 'undefined';
  }

  if (isWideLayout) return str.length > 42 ? str.substr(0, 30) + 'â€¦' + str.substr(-10) : str;
  return str.length > 22 ? "".concat(str.substr(0, 15), "\u2026").concat(str.substr(-5)) : str;
}

var expandFirstLevel = function expandFirstLevel(keyName, data, level) {
  return level <= 1;
};

function prepareDelta(value) {
  if (value && value._t === 'a') {
    var res = {};

    for (var _key in value) {
      if (_key !== '_t') {
        if (_key[0] === '_' && !value[_key.substr(1)]) {
          res[_key.substr(1)] = value[_key];
        } else if (value['_' + _key]) {
          res[_key] = [value['_' + _key][0], value[_key][0]];
        } else if (!value['_' + _key] && _key[0] !== '_') {
          res[_key] = value[_key];
        }
      }
    }

    return res;
  }

  return value;
}

var JSONDiff = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(JSONDiff, _Component);

  var _super = _createSuper(JSONDiff);

  function JSONDiff() {
    var _this;

    (0, _classCallCheck2.default)(this, JSONDiff);

    for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {
      args[_key2] = arguments[_key2];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "state", {
      data: {}
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getItemString", function (type, data) {
      return (0, _getItemString.default)(_this.props.styling, type, data, _this.props.dataTypeKey, _this.props.isWideLayout, true);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "valueRenderer", function (raw, value) {
      var _this$props = _this.props,
          styling = _this$props.styling,
          isWideLayout = _this$props.isWideLayout;

      function renderSpan(name, body) {
        return /*#__PURE__*/_react.default.createElement("span", (0, _extends2.default)({
          key: name
        }, styling(['diff', name])), body);
      }

      if (Array.isArray(value)) {
        switch (value.length) {
          case 1:
            return /*#__PURE__*/_react.default.createElement("span", styling('diffWrap'), renderSpan('diffAdd', stringifyAndShrink(value[0], isWideLayout)));

          case 2:
            return /*#__PURE__*/_react.default.createElement("span", styling('diffWrap'), renderSpan('diffUpdateFrom', stringifyAndShrink(value[0], isWideLayout)), renderSpan('diffUpdateArrow', ' => '), renderSpan('diffUpdateTo', stringifyAndShrink(value[1], isWideLayout)));

          case 3:
            return /*#__PURE__*/_react.default.createElement("span", styling('diffWrap'), renderSpan('diffRemove', stringifyAndShrink(value[0])));
        }
      }

      return raw;
    });
    return _this;
  }

  (0, _createClass2.default)(JSONDiff, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.updateData();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (prevProps.delta !== this.props.delta) {
        this.updateData();
      }
    }
  }, {
    key: "updateData",
    value: function updateData() {
      // this magically fixes weird React error, where it can't find a node in tree
      // if we set `delta` as JSONTree data right away
      // https://github.com/alexkuz/redux-devtools-inspector/issues/17
      this.setState({
        data: this.props.delta
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          styling = _this$props2.styling,
          base16Theme = _this$props2.base16Theme,
          props = (0, _objectWithoutProperties2.default)(_this$props2, _excluded);

      if (!this.state.data) {
        return /*#__PURE__*/_react.default.createElement("div", styling('stateDiffEmpty'), "(states are equal)");
      }

      return /*#__PURE__*/_react.default.createElement(_reactJsonTree.JSONTree, (0, _extends2.default)({}, props, {
        theme: (0, _getJsonTreeTheme.default)(base16Theme),
        data: this.state.data,
        getItemString: this.getItemString,
        valueRenderer: this.valueRenderer,
        postprocessValue: prepareDelta,
        isCustomNode: Array.isArray,
        shouldExpandNode: expandFirstLevel,
        hideRoot: true
      }));
    }
  }]);
  return JSONDiff;
}(_react.Component);

exports.default = JSONDiff;