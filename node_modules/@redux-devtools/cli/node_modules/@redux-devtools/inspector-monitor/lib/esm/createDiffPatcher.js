import { DiffPatcher } from 'jsondiffpatch';

var defaultObjectHash = function defaultObjectHash(o, idx) {
  return o === null && '$$null' || o && (o.id || o.id === 0) && "$$id:".concat(JSON.stringify(o.id)) || o && (o._id || o._id === 0) && "$$_id:".concat(JSON.stringify(o._id)) || "$$index:".concat(idx);
};

var defaultPropertyFilter = function defaultPropertyFilter(name, context) {
  return typeof context.left[name] !== 'function' && typeof context.right[name] !== 'function';
};

var defaultDiffPatcher = new DiffPatcher({
  arrays: {
    detectMove: false
  },
  objectHash: defaultObjectHash,
  propertyFilter: defaultPropertyFilter
});
export default function createDiffPatcher(objectHash, propertyFilter) {
  if (!objectHash && !propertyFilter) {
    return defaultDiffPatcher;
  }

  return new DiffPatcher({
    arrays: {
      detectMove: false
    },
    objectHash: objectHash || defaultObjectHash,
    propertyFilter: propertyFilter || defaultPropertyFilter
  });
}