import _extends from "@babel/runtime/helpers/extends";
import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import _toArray from "@babel/runtime/helpers/toArray";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { Component } from 'react';
import { DEFAULT_STATE } from './redux';
import ActionPreviewHeader from './ActionPreviewHeader';
import DiffTab from './tabs/DiffTab';
import StateTab from './tabs/StateTab';
import ActionTab from './tabs/ActionTab';
var DEFAULT_TABS = [{
  name: 'Action',
  component: ActionTab
}, {
  name: 'Diff',
  component: DiffTab
}, {
  name: 'State',
  component: StateTab
}];

var ActionPreview = /*#__PURE__*/function (_Component) {
  _inherits(ActionPreview, _Component);

  var _super = _createSuper(ActionPreview);

  function ActionPreview() {
    var _this;

    _classCallCheck(this, ActionPreview);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "labelRenderer", function (_ref, nodeType, expanded) {
      var _ref2 = _toArray(_ref),
          key = _ref2[0],
          rest = _ref2.slice(1);

      var _this$props = _this.props,
          styling = _this$props.styling,
          onInspectPath = _this$props.onInspectPath,
          inspectedPath = _this$props.inspectedPath;
      return /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement("span", styling('treeItemKey'), key), /*#__PURE__*/React.createElement("span", _extends({}, styling('treeItemPin'), {
        onClick: function onClick() {
          return onInspectPath([].concat(_toConsumableArray(inspectedPath.slice(0, inspectedPath.length - 1)), _toConsumableArray([key].concat(_toConsumableArray(rest)).reverse())));
        }
      }), '(pin)'), !expanded && ': ');
    });

    return _this;
  }

  _createClass(ActionPreview, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          styling = _this$props2.styling,
          delta = _this$props2.delta,
          error = _this$props2.error,
          nextState = _this$props2.nextState,
          onInspectPath = _this$props2.onInspectPath,
          inspectedPath = _this$props2.inspectedPath,
          tabName = _this$props2.tabName,
          isWideLayout = _this$props2.isWideLayout,
          onSelectTab = _this$props2.onSelectTab,
          action = _this$props2.action,
          actions = _this$props2.actions,
          selectedActionId = _this$props2.selectedActionId,
          startActionId = _this$props2.startActionId,
          computedStates = _this$props2.computedStates,
          base16Theme = _this$props2.base16Theme,
          invertTheme = _this$props2.invertTheme,
          tabs = _this$props2.tabs,
          dataTypeKey = _this$props2.dataTypeKey,
          monitorState = _this$props2.monitorState,
          updateMonitorState = _this$props2.updateMonitorState;
      var renderedTabs = typeof tabs === 'function' ? tabs(DEFAULT_TABS) : tabs ? tabs : DEFAULT_TABS;

      var _ref3 = renderedTabs.find(function (tab) {
        return tab.name === tabName;
      }) || renderedTabs.find(function (tab) {
        return tab.name === DEFAULT_STATE.tabName;
      }),
          TabComponent = _ref3.component;

      return /*#__PURE__*/React.createElement("div", _extends({
        key: "actionPreview"
      }, styling('actionPreview')), /*#__PURE__*/React.createElement(ActionPreviewHeader, {
        tabs: renderedTabs,
        styling: styling,
        inspectedPath: inspectedPath,
        onInspectPath: onInspectPath,
        tabName: tabName,
        onSelectTab: onSelectTab
      }), !error && /*#__PURE__*/React.createElement("div", _extends({
        key: "actionPreviewContent"
      }, styling('actionPreviewContent')), /*#__PURE__*/React.createElement(TabComponent, {
        labelRenderer: this.labelRenderer,
        styling: styling,
        computedStates: computedStates,
        actions: actions,
        selectedActionId: selectedActionId,
        startActionId: startActionId,
        base16Theme: base16Theme,
        invertTheme: invertTheme,
        isWideLayout: isWideLayout,
        dataTypeKey: dataTypeKey,
        delta: delta,
        action: action,
        nextState: nextState,
        monitorState: monitorState,
        updateMonitorState: updateMonitorState
      })), error && /*#__PURE__*/React.createElement("div", styling('stateError'), error));
    }
  }]);

  return ActionPreview;
}(Component);

_defineProperty(ActionPreview, "defaultProps", {
  tabName: DEFAULT_STATE.tabName
});

export default ActionPreview;