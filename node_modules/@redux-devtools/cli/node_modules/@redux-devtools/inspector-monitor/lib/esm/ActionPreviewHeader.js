import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
import PropTypes from 'prop-types';

var ActionPreviewHeader = function ActionPreviewHeader(_ref) {
  var styling = _ref.styling,
      inspectedPath = _ref.inspectedPath,
      onInspectPath = _ref.onInspectPath,
      tabName = _ref.tabName,
      onSelectTab = _ref.onSelectTab,
      tabs = _ref.tabs;
  return /*#__PURE__*/React.createElement("div", _extends({
    key: "previewHeader"
  }, styling('previewHeader')), /*#__PURE__*/React.createElement("div", styling('tabSelector'), tabs.map(function (tab) {
    return /*#__PURE__*/React.createElement("div", _extends({
      onClick: function onClick() {
        return onSelectTab(tab.name);
      },
      key: tab.name
    }, styling(['selectorButton', tab.name === tabName && 'selectorButtonSelected'], tab.name === tabName)), tab.name);
  })), /*#__PURE__*/React.createElement("div", styling('inspectedPath'), inspectedPath.length ? /*#__PURE__*/React.createElement("span", styling('inspectedPathKey'), /*#__PURE__*/React.createElement("a", _extends({
    onClick: function onClick() {
      return onInspectPath([]);
    }
  }, styling('inspectedPathKeyLink')), tabName)) : tabName, inspectedPath.map(function (key, idx) {
    return idx === inspectedPath.length - 1 ? /*#__PURE__*/React.createElement("span", {
      key: key
    }, key) : /*#__PURE__*/React.createElement("span", _extends({
      key: key
    }, styling('inspectedPathKey')), /*#__PURE__*/React.createElement("a", _extends({
      onClick: function onClick() {
        return onInspectPath(inspectedPath.slice(0, idx + 1));
      }
    }, styling('inspectedPathKeyLink')), key));
  })));
};

ActionPreviewHeader.propTypes = {
  tabs: PropTypes.array.isRequired,
  styling: PropTypes.func.isRequired,
  inspectedPath: PropTypes.array.isRequired,
  onInspectPath: PropTypes.func.isRequired,
  tabName: PropTypes.string.isRequired,
  onSelectTab: PropTypes.func.isRequired
};
export default ActionPreviewHeader;