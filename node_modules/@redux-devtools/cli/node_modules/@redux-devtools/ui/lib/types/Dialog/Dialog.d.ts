import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import { Base16Theme } from 'base16';
import { Props as FormProps } from '../Form/Form';
export interface DialogProps {
    open?: boolean;
    title?: string;
    children?: React.ReactNode;
    actions?: React.ReactNode[];
    submitText?: string;
    fullWidth?: boolean;
    noHeader?: boolean;
    noFooter?: boolean;
    modal?: boolean;
    onDismiss: (e: React.MouseEvent<HTMLButtonElement | HTMLDivElement> | false) => void;
    onSubmit: () => void;
    theme?: Base16Theme;
}
export default class Dialog<P> extends PureComponent<DialogProps | (Omit<DialogProps, 'onSubmit'> & FormProps<P>)> {
    submitButton?: HTMLInputElement | null;
    onSubmit: () => void;
    getFormButtonRef: React.RefCallback<HTMLInputElement>;
    onKeyDown: React.KeyboardEventHandler<HTMLDivElement>;
    render(): JSX.Element;
    static propTypes: {
        open: PropTypes.Requireable<boolean>;
        title: PropTypes.Requireable<string>;
        children: PropTypes.Requireable<any>;
        actions: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        submitText: PropTypes.Requireable<string>;
        fullWidth: PropTypes.Requireable<boolean>;
        noHeader: PropTypes.Requireable<boolean>;
        noFooter: PropTypes.Requireable<boolean>;
        modal: PropTypes.Requireable<boolean>;
        onDismiss: PropTypes.Requireable<(...args: any[]) => any>;
        onSubmit: PropTypes.Requireable<(...args: any[]) => any>;
        theme: PropTypes.Requireable<object>;
    };
}
