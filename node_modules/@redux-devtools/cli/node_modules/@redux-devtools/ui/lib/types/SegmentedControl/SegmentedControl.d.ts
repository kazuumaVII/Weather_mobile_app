import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { Base16Theme } from 'base16';
export interface SegmentedControlProps {
    values: string[];
    selected?: string;
    onClick: (value: string) => void;
    disabled?: boolean;
    theme?: Base16Theme;
}
export default class SegmentedControl extends Component<SegmentedControlProps> {
    shouldComponentUpdate(nextProps: SegmentedControlProps): boolean;
    onClick: React.MouseEventHandler<HTMLButtonElement>;
    onMouseUp: React.MouseEventHandler<HTMLButtonElement>;
    render(): JSX.Element;
    static propTypes: {
        values: PropTypes.Validator<any[]>;
        selected: PropTypes.Requireable<string>;
        onClick: PropTypes.Requireable<(...args: any[]) => any>;
        disabled: PropTypes.Requireable<boolean>;
        theme: PropTypes.Requireable<object>;
    };
}
