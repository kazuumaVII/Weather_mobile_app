import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { Tab } from './TabsHeader';
export declare type Position = 'left' | 'right' | 'center';
export interface TabsProps<P> {
    tabs: Tab<P>[];
    selected?: string;
    main?: boolean;
    onClick: (value: string) => void;
    collapsible?: boolean;
    position: Position;
}
export default class Tabs<P> extends Component<TabsProps<P>> {
    SelectedComponent?: React.ComponentType<P>;
    selector?: () => P;
    onMouseUp: React.MouseEventHandler<HTMLButtonElement>;
    onClick: React.MouseEventHandler<HTMLButtonElement>;
    renderTabs(): JSX.Element[];
    render(): JSX.Element;
    static propTypes: {
        tabs: PropTypes.Validator<any[]>;
        selected: PropTypes.Requireable<string>;
        main: PropTypes.Requireable<boolean>;
        onClick: PropTypes.Validator<(...args: any[]) => any>;
        collapsible: PropTypes.Requireable<boolean>;
        position: PropTypes.Requireable<string>;
    };
    static defaultProps: {
        position: string;
    };
}
