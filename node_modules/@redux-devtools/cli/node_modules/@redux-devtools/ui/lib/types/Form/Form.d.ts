import React from 'react';
import PropTypes from 'prop-types';
import { FormProps } from '@rjsf/core';
import { Base16Theme } from 'base16';
export interface Props<T> extends FormProps<T> {
    children?: React.ReactNode;
    submitText?: string;
    primaryButton?: boolean;
    noSubmit?: boolean;
    theme?: Base16Theme;
}
declare const Form_base: typeof React.PureComponent;
/**
 * Wrapper around [`react-jsonschema-form`](https://github.com/rjsf-team/react-jsonschema-form) with custom widgets.
 */
export default class Form<T> extends Form_base<Props<T>> {
    render(): JSX.Element;
    static propTypes: {
        children: PropTypes.Requireable<any>;
        submitText: PropTypes.Requireable<string>;
        primaryButton: PropTypes.Requireable<boolean>;
        noSubmit: PropTypes.Requireable<boolean>;
        schema: PropTypes.Validator<object>;
        uiSchema: PropTypes.Requireable<object>;
        formData: PropTypes.Requireable<any>;
        widgets: PropTypes.Requireable<{
            [x: string]: object | null | undefined;
        }>;
    };
}
export {};
