import React, { ReactElement } from 'react';
import PropTypes from 'prop-types';
import { GroupBase, Props as ReactSelectProps } from 'react-select';
import { Theme } from '../themes/default';
export interface SelectProps<Option, IsMulti extends boolean = false, Group extends GroupBase<Option> = GroupBase<Option>> extends Omit<ReactSelectProps<Option, IsMulti, Group>, 'theme'> {
    theme: Theme;
}
declare const Select_base: typeof React.PureComponent;
/**
 * Wrapper around [React Select](https://github.com/JedWatson/react-select).
 */
export declare class Select<Option, IsMulti extends boolean = false, Group extends GroupBase<Option> = GroupBase<Option>> extends Select_base<SelectProps<Option, IsMulti, Group>> {
    render(): JSX.Element;
    static propTypes: {
        isClearable: PropTypes.Requireable<boolean>;
        isDisabled: PropTypes.Requireable<boolean>;
        isLoading: PropTypes.Requireable<boolean>;
        maxMenuHeight: PropTypes.Requireable<number>;
        isMulti: PropTypes.Requireable<boolean>;
        isSearchable: PropTypes.Requireable<boolean>;
        value: PropTypes.Requireable<any>;
        menuPlacement: PropTypes.Requireable<string>;
    };
}
export interface ExternalSelectProps<Option, IsMulti extends boolean = false, Group extends GroupBase<Option> = GroupBase<Option>> extends Omit<ReactSelectProps<Option, IsMulti, Group>, 'theme'> {
    theme?: Theme;
}
declare type SelectComponent = <Option, IsMulti extends boolean = false, Group extends GroupBase<Option> = GroupBase<Option>>(props: ExternalSelectProps<Option, IsMulti, Group>) => ReactElement;
declare const _default: SelectComponent & {
    theme?: Theme | undefined;
};
export default _default;
