import _defineProperty from "@babel/runtime/helpers/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

export default (function (colors) {
  return _objectSpread(_objectSpread({}, colors), {}, {
    fontFamily: "'Source Sans Pro', sans-serif",
    codeFontFamily: "'Source Code Pro', monospace",
    inputHeight: 30,
    inputBorderWidth: 1,
    inputBorderRadius: 4,
    spinnerSize: 13,
    // Math.floor(theme.inputHeight / 2) - 2
    inputPadding: 10,
    // theme.inputHeight / 3
    selectArrowWidth: 4,
    // Math.floor(theme.inputHeight / 7)
    inputInternalHeight: 28,
    // theme.inputHeight - theme.inputBorderWidth * 2
    inputBorderColor: colors.base02,
    inputFocusedStyle: "border-color: ".concat(colors.base0D)
  });
});