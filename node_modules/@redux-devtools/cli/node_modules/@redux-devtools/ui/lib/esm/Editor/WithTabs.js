import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { Component } from 'react';
import Editor from './';
import Tabs from '../Tabs';
var value1 = "\n  const func1 = () => {}\n";
var value2 = "\n  const func2 = () => {}\n";

/* eslint-disable react/prop-types */
var WithTabs = /*#__PURE__*/function (_Component) {
  _inherits(WithTabs, _Component);

  var _super = _createSuper(WithTabs);

  function WithTabs() {
    var _this;

    _classCallCheck(this, WithTabs);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      selected: 'Function 1'
    });

    return _this;
  }

  _createClass(WithTabs, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          position = _this$props.position,
          lineNumbers = _this$props.lineNumbers;
      return /*#__PURE__*/React.createElement(Tabs, {
        tabs: [{
          name: 'Function 1',
          component: Editor,
          selector: function selector() {
            return {
              value: value1,
              lineNumbers: lineNumbers
            };
          }
        }, {
          name: 'Function 2',
          component: Editor,
          selector: function selector() {
            return {
              value: value2,
              lineNumbers: lineNumbers
            };
          }
        }],
        selected: this.state.selected,
        onClick: function onClick(selected) {
          _this2.setState({
            selected: selected
          });
        },
        position: position
      });
    }
  }]);

  return WithTabs;
}(Component);

export { WithTabs as default };