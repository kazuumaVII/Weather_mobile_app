import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
var _excluded = ["values"];

var _templateObject;

import React from 'react';
import styled from 'styled-components';
import SegmentedControl from './';
var Container = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  display: flex;\n  height: 100%;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n"])));
export default {
  title: 'SegmentedControl',
  component: SegmentedControl
}; // eslint-disable-next-line react/prop-types

var Template = function Template(_ref) {
  var values = _ref.values,
      args = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(SegmentedControl, _extends({
    values: ['Button1', 'Button2', 'Button3']
  }, args)));
};

export var Default = Template.bind({});
Default.args = {
  selected: 'Button1',
  disabled: false
};
Default.argTypes = {
  values: {
    control: {
      disable: true
    }
  },
  onClick: {
    control: {
      disable: true
    }
  },
  theme: {
    control: {
      disable: true
    }
  }
};