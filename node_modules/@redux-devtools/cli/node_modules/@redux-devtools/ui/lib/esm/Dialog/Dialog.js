import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
var _excluded = ["modal", "open", "fullWidth", "title", "children", "actions", "noHeader", "noFooter", "submitText", "onDismiss"];

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import createStyledComponent from '../utils/createStyledComponent';
import * as styles from './styles';
import Button from '../Button';
import Form from '../Form';
var DialogWrapper = createStyledComponent(styles);

function isForm(rest) {
  return rest.schema !== undefined;
}

var Dialog = /*#__PURE__*/function (_PureComponent) {
  _inherits(Dialog, _PureComponent);

  var _super = _createSuper(Dialog);

  function Dialog() {
    var _this;

    _classCallCheck(this, Dialog);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "onSubmit", function () {
      if (_this.submitButton) _this.submitButton.click();else _this.props.onSubmit();
    });

    _defineProperty(_assertThisInitialized(_this), "getFormButtonRef", function (node) {
      _this.submitButton = node;
    });

    _defineProperty(_assertThisInitialized(_this), "onKeyDown", function (e) {
      if (e.keyCode === 27
      /* esc */
      ) {
        e.preventDefault();

        _this.props.onDismiss(false);
      }
    });

    return _this;
  }

  _createClass(Dialog, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          modal = _this$props.modal,
          open = _this$props.open,
          fullWidth = _this$props.fullWidth,
          title = _this$props.title,
          children = _this$props.children,
          actions = _this$props.actions,
          noHeader = _this$props.noHeader,
          noFooter = _this$props.noFooter,
          submitText = _this$props.submitText,
          onDismiss = _this$props.onDismiss,
          rest = _objectWithoutProperties(_this$props, _excluded);

      var schema = rest.schema;
      return /*#__PURE__*/React.createElement(DialogWrapper, {
        open: open,
        fullWidth: fullWidth,
        onKeyDown: this.onKeyDown,
        theme: rest.theme
      }, /*#__PURE__*/React.createElement("div", {
        onClick: !modal ? onDismiss : undefined
      }), /*#__PURE__*/React.createElement("div", null, !noHeader && /*#__PURE__*/React.createElement("div", {
        className: "mc-dialog--header"
      }, /*#__PURE__*/React.createElement("div", null, schema ? schema.title || title : title), !modal && /*#__PURE__*/React.createElement("button", {
        onClick: onDismiss
      }, "\xD7")), /*#__PURE__*/React.createElement("div", {
        className: "mc-dialog--body"
      }, children, isForm(rest) && /*#__PURE__*/React.createElement(Form, rest, !noFooter && /*#__PURE__*/React.createElement("input", {
        type: "submit",
        ref: this.getFormButtonRef,
        className: "mc-dialog--hidden"
      }))), !noFooter && (actions ? /*#__PURE__*/React.createElement("div", {
        className: "mc-dialog--footer"
      }, submitText ? [].concat(_toConsumableArray(actions), [/*#__PURE__*/React.createElement(Button, {
        key: "default-submit",
        primary: true,
        onClick: this.onSubmit
      }, submitText)]) : actions) : /*#__PURE__*/React.createElement("div", {
        className: "mc-dialog--footer"
      }, /*#__PURE__*/React.createElement(Button, {
        onClick: onDismiss
      }, "Cancel"), /*#__PURE__*/React.createElement(Button, {
        primary: true,
        onClick: this.onSubmit
      }, submitText || 'Submit')))));
    }
  }]);

  return Dialog;
}(PureComponent);

_defineProperty(Dialog, "propTypes", {
  open: PropTypes.bool,
  title: PropTypes.string,
  children: PropTypes.any,
  actions: PropTypes.node,
  submitText: PropTypes.string,
  fullWidth: PropTypes.bool,
  noHeader: PropTypes.bool,
  noFooter: PropTypes.bool,
  modal: PropTypes.bool,
  onDismiss: PropTypes.func,
  onSubmit: PropTypes.func,
  theme: PropTypes.object
});

export { Dialog as default };