import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { MdClose } from 'react-icons/md';
import { MdWarning } from 'react-icons/md';
import { MdError } from 'react-icons/md';
import { MdCheckCircle } from 'react-icons/md';
import createStyledComponent from '../utils/createStyledComponent';
import styles from './styles';
var NotificationWrapper = createStyledComponent(styles);

var Notification = /*#__PURE__*/function (_Component) {
  _inherits(Notification, _Component);

  var _super = _createSuper(Notification);

  function Notification() {
    var _this;

    _classCallCheck(this, Notification);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "getIcon", function () {
      switch (_this.props.type) {
        case 'warning':
          return /*#__PURE__*/React.createElement(MdWarning, null);

        case 'error':
          return /*#__PURE__*/React.createElement(MdError, null);

        case 'success':
          return /*#__PURE__*/React.createElement(MdCheckCircle, null);

        default:
          return null;
      }
    });

    return _this;
  }

  _createClass(Notification, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      return nextProps.children !== this.props.children || nextProps.type !== this.props.type;
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/React.createElement(NotificationWrapper, {
        type: this.props.type,
        theme: this.props.theme
      }, this.getIcon(), /*#__PURE__*/React.createElement("span", null, this.props.children), this.props.onClose && /*#__PURE__*/React.createElement("button", {
        onClick: this.props.onClose
      }, /*#__PURE__*/React.createElement(MdClose, null)));
    }
  }]);

  return Notification;
}(Component);

_defineProperty(Notification, "propTypes", {
  children: PropTypes.any.isRequired,
  type: PropTypes.oneOf(['info', 'success', 'warning', 'error']),
  onClose: PropTypes.func,
  theme: PropTypes.object
});

_defineProperty(Notification, "defaultProps", {
  type: 'info'
});

export { Notification as default };