import React from 'react';
import PropTypes from 'prop-types';
import { ThemeProvider } from 'styled-components';
import { useTheme } from '../utils/theme';
import { MainContainerWrapper, ContainerWrapper } from './styles';

var ContainerFromThemeData = function ContainerFromThemeData(_ref) {
  var themeData = _ref.themeData,
      className = _ref.className,
      children = _ref.children;
  var theme = useTheme(themeData);
  return /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: theme
  }, /*#__PURE__*/React.createElement(MainContainerWrapper, {
    className: className
  }, children));
};

var Container = function Container(_ref2) {
  var themeData = _ref2.themeData,
      className = _ref2.className,
      theme = _ref2.theme,
      children = _ref2.children;

  if (!themeData) {
    return /*#__PURE__*/React.createElement(ContainerWrapper, {
      className: className,
      theme: theme
    }, children);
  }

  return /*#__PURE__*/React.createElement(ContainerFromThemeData, {
    themeData: themeData,
    className: className
  }, children);
};

Container.propTypes = {
  children: PropTypes.node,
  themeData: PropTypes.any,
  theme: PropTypes.any,
  className: PropTypes.string
};
export default Container;