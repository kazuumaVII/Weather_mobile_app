import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

var _templateObject;

import { css } from 'styled-components';

var getBackground = function getBackground(theme, type) {
  switch (type) {
    case 'success':
      return "background-color: ".concat(theme.base0B, ";");

    case 'warning':
      return "background-color: ".concat(theme.base0A, ";");

    case 'error':
      return "background-color: ".concat(theme.base08, ";");

    default:
      return "background-color: ".concat(theme.base0D, ";");
  }
};

export default (function (_ref) {
  var theme = _ref.theme,
      type = _ref.type;
  return css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  display: flex;\n  align-items: flex-start;\n  flex-shrink: 0;\n  box-sizing: border-box;\n  box-shadow: inset ", " 0 0 1px;\n  font-size: 1.1em;\n  padding: 7px;\n  width: 100%;\n  color: ", ";\n  ", "\n\n  & > svg:first-child {\n    font-size: 1.4em;\n    opacity: 0.5;\n  }\n\n  & > span {\n    width: 100%;\n    text-align: center;\n    padding: 0.1em;\n  }\n\n  & > button {\n    cursor: pointer;\n    float: right;\n    font-size: 1.1em;\n    border: 1px solid transparent;\n    background: transparent;\n    padding: 0.1em;\n    line-height: 0;\n    outline: none;\n    color: inherit;\n    opacity: 0.8;\n  }\n\n  & > button:hover,\n  & > button:active {\n    opacity: 1;\n  }\n\n  & > button:focus {\n    border: 1px solid ", ";\n  }\n"])), theme.base05, theme.base01, getBackground(theme, type), theme.base03);
});