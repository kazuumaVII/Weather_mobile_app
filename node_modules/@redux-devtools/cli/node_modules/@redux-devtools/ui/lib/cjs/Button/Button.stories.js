"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Mark = exports.Default = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _md = require("react-icons/md");

var _ = _interopRequireDefault(require("./"));

var _templateObject;

var _default = {
  title: 'Button',
  component: _.default
};
exports.default = _default;

var Container = _styledComponents.default.div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2.default)(["\n  display: flex;\n  height: 100%;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n"])));

var Template = function Template(args) {
  return /*#__PURE__*/_react.default.createElement(Container, null, /*#__PURE__*/_react.default.createElement(_.default, args));
};

var Default = Template.bind({});
exports.Default = Default;
Default.args = {
  title: 'Hello Tooltip! \\a And from new line hello!',
  tooltipPosition: 'top',
  primary: true,
  size: 'normal',
  disabled: false,
  children: 'Hello Button'
};
Default.argTypes = {
  onClick: {
    control: {
      disable: true
    }
  },
  type: {
    control: {
      disable: true
    }
  },
  mark: {
    control: {
      disable: true
    }
  },
  theme: {
    control: {
      disable: true
    }
  }
};
var Mark = Template.bind({});
exports.Mark = Mark;
Mark.args = {
  mark: 'base08',
  title: 'Hello Tooltip',
  tooltipPosition: 'top',
  size: 'normal',
  disabled: false,
  children: /*#__PURE__*/_react.default.createElement(_md.MdFiberManualRecord, null)
};
Mark.argTypes = {
  children: {
    control: {
      disable: true
    }
  },
  onClick: {
    control: {
      disable: true
    }
  },
  type: {
    control: {
      disable: true
    }
  },
  primary: {
    control: {
      disable: true
    }
  },
  theme: {
    control: {
      disable: true
    }
  }
};